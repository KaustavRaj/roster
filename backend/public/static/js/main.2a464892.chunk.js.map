{"version":3,"sources":["components/UserIcon.js","store/context.js","components/AppBar.js","components/CreateBoard.js","components/Confirmation.js","components/Flashcard.js","hoc/withGlobalHeader.js","components/ProtectedRoute.js","components/TaskDetail.js","components/TaskItem.js","components/TasksList.js","components/LoadingScreen.js","components/NotFoundPage.js","components/AddMembers.js","views/Boards.js","components/Forms.js","views/Login.js","views/Signup.js","views/Dashboard.js","App.js","store/initialState.js","hooks/useGlobalState.js","store/methods.js","store/GlobalStateProvider.js","index.js"],"names":["UserIcon","props","userData","showToolTip","showRemove","onRemove","rest","renderAvatar","style","backgroundColor","verticalAlign","cursor","name","split","slice","map","word","toUpperCase","join","initials","key","renderToolTipAvatar","title","type","icon","CloseCircleOutlined","size","onClick","id","placement","Context","createContext","AppBar","useState","profileInfoVisible","setProfileInfoVisible","useContext","globalState","globalDispatch","history","useHistory","handleProfileVisibilityChange","visible","handleLogout","axios","post","then","response","data","success","push","error","console","log","handleLogin","LeftComponent","CenterComponent","to","textAlign","fontSize","color","RightComponent","justify","align","isAuthenticated","content","ProfileContent","trigger","onVisibleChange","ghost","PoweroffOutlined","padding","paddingTop","paddingBottom","paddingRight","paddingLeft","minHeight","span","CreateBoard","boardName","setBoardName","selectedMembers","setSelectedMembers","autocompleteOptions","setAutocompleteOptions","handleSearch","event","a","length","get","user","value","handleRemoveMember","remove_id","previousMembers","filter","footer","onCancel","onClose","gutter","placeholder","className","onChange","target","width","onSearch","options","onSelect","newMember","concat","Search","enterButton","Group","maxCount","eachMember","block","payload","members","member","onError","message","headers","onCreate","Confirmation","children","onConfirm","popconfirmVisible","setPopconfirmVisible","hidePopconfirm","okText","cancelText","FlashCard","boardData","onDelete","linkTo","hoverable","extra","shape","DeleteTwoTone","twoToneColor","Content","Layout","Header","withGlobalHeader","ProtectedRoute","Component","component","render","routeProps","pathname","state","from","location","Title","Typography","Paragraph","Sider","TaskDetail","methods","updateTasksList","task_id","itemData","stage_id","stageData","board_id","useParams","TASK_DATA_URL","setTitle","description","setDescription","assigned","setAssigned","pageLoading","setPageLoading","hasJoined","setHasJoined","useEffect","getTaskDetails","alreadyJoined","find","err","finally","params","boardIds","JSON","stringify","paramsSerializer","qs","getMembers","handleRemoveAssigned","removeAssigned","previouslyAssigned","renderPageLoadingScreen","minWidth","display","justifyContent","alignItems","handleClose","level","editable","HighlightOutlined","tooltip","newTitle","changeTaskTitle","toUpdate","newDescription","changeTaskDescription","assigned_id","newlyAssigned","addAssigned","marginTop","joinTask","disabled","deleteTask","strong","stagesList","join_stage","to_stage","moveTask","index","TaskItem","taskDetailVisible","setTaskDetailVisible","handleTaskDetailOpen","handleTaskDetailClose","draggableId","provided","ref","innerRef","dragHandleProps","draggableProps","marginLeft","marginRight","marginBottom","borderRadius","boxShadow","TaskList","stageMeta","tasks","setTasks","addCardVisible","setAddCardVisible","tasksCopy","Array","sort","task1","task2","position","handleAddCard","addTask","newTask","handleCloseAddCard","updateDetails","callback","eachTask","prevTasks","task","listHeader","listFooter","onPressEnter","CloseOutlined","PlusOutlined","droppableId","droppableProps","eachCard","LoadingScreen","NotFoundPage","status","subTitle","AddMembers","currentBoard","put","Boards","createBoardVisible","setCreateBoardVisible","boardsList","setBoardsList","boards","getBoards","handleDeleteBoard","delete","Error","prevBoardIds","eachBoard","board","catch","e","Text","board_data","prevBoardList","Forms","formType","formTitle","url","replace","bordered","initialValues","remember","onFinish","Item","rules","required","prefix","UserOutlined","allowClear","MailOutlined","Password","LockOutlined","htmlType","Login","Signup","Dashboard","BASE_URL","TASK_URL","uploading","setUploading","dashboardData","setDashboardData","addMembersVisible","setAddMembersVisible","stages","setStages","getAllStages","stage","prevStages","updateTask","updateStages","changeAssigned","assignedType","from_stage_id","to_stage_id","current_stage_index","onDragEnd","source","destination","resetTasksPosition","newPosition","reorder","stageId","prevTaskIndex","newTaskIndex","stageIndex","eachStage","indexOf","foundStage","splice","transfer","fromStageId","toStageId","fromStage","toStage","final_index","result","reorderedStage","fromId","toId","newStages","pageLoadingScreen","SyncOutlined","spin","CheckCircleTwoTone","App","verifyExistingToken","path","exact","initialState","reducer","action","remaining_board_ids","useGlobalState","useReducer","GlobalStateProvider","Provider","ReactDOM","StrictMode","document","getElementById"],"mappings":"sdAuDeA,MAnDf,SAAkBC,GAAQ,IAChBC,EAAyDD,EAAzDC,SAAUC,EAA+CF,EAA/CE,YAAaC,EAAkCH,EAAlCG,WAAYC,EAAsBJ,EAAtBI,SAAaC,EADjC,YAC0CL,EAD1C,oDA4BjBM,EACJ,cAAC,IAAD,yBAEEC,MAAO,CACLC,gBAAiB,QACjBC,cAAe,SACfC,OAAQ,YAENL,GAPN,aA1Be,SAACM,GAChB,GAAIA,EACF,OAAOA,EACJC,MAAM,KACNC,MAAM,EAAG,GACTC,KAAI,SAACC,GAAD,OAAUA,EAAKC,cAAc,MACjCC,KAAK,IA6BPC,CAASjB,EAASU,QARdX,EAAMmB,KAYTC,EACJ,cAAC,IAAD,CAAyBC,MA5BvB,eAAC,WAAD,WACGpB,EAASU,KACTR,EACC,cAAC,IAAD,CACEmB,KAAK,OACLC,KAAM,cAACC,EAAA,EAAD,CAAqBC,KAAK,UAChCC,QAAS,kBAAMtB,EAASH,EAAS0B,OAEjC,QAoBwCC,UAAU,MAA1D,SACGtB,GADWN,EAAMmB,KAKtB,OAAOjB,EAAckB,EAAsBd,GChD9BuB,EAFCC,wBAAc,ICMf,SAASC,IAAU,IAAD,EACqBC,oBAAS,GAD9B,mBACxBC,EADwB,KACJC,EADI,OAESC,qBAAWN,GAA3CO,EAFuB,EAEvBA,YAAaC,EAFU,EAEVA,eACfC,EAAUC,cAEVC,EAAgC,SAACC,GACrCP,EAAsBO,IAGlBC,EAAe,WACnBC,IAAMC,KAAK,WAAWC,MACpB,SAACC,GACKA,EAASC,KAAKC,UAChBX,EAAe,CAAEf,KAAM,WACvBgB,EAAQW,KAAK,cAGjB,SAACC,GACCC,QAAQC,IAAI,QAASF,OAKrBG,EAAc,WAClBf,EAAQW,KAAK,WAGTK,EAAgB,WACpB,OAAO,MAGHC,EAAkB,WACtB,OACE,cAAC,IAAD,CAAMC,GAAG,UAAT,SACE,qBAAKjD,MAAO,CAAEkD,UAAW,SAAUC,SAAU,GAAIC,MAAO,SAAxD,uBAOAC,EAAiB,WACrB,OACE,cAAC,IAAD,CAAKC,QAAQ,MAAMC,MAAM,SAAzB,SACE,cAAC,IAAD,UACG1B,EAAY2B,gBACX,cAAC,IAAD,CACEnC,UAAU,cACVoC,QAAS,cAACC,EAAD,IACTC,QAAQ,QACRzB,QAASR,EACTkC,gBAAiB3B,EALnB,SAOE,cAAC,EAAD,CAAUvC,SAAUmC,EAAYnC,aAGlC,cAAC,IAAD,CAAQmE,OAAK,EAAC1C,QAAS2B,EAAvB,yBASJY,EAAiB,WACrB,OACE,cAAC,IAAD,CACE3C,KAAK,OACLC,KAAM,cAAC8C,EAAA,EAAD,GAAsB,WAC5B9D,MAAO,CAAE+D,QAAS,GAClB5C,QAASgB,EAJX,sBAWJ,OACE,wBACEnC,MAAO,CACLC,gBAAiB,UACjB+D,WAAY,EACZC,cAAe,EACfC,aAAc,GACdC,YAAa,GACbC,UAAW,OAPf,SAUE,eAAC,IAAD,CAAKb,MAAM,SAAX,UAEE,cAAC,IAAD,CAAKc,KAAM,EAAX,SACE,cAACtB,EAAD,MAGF,cAAC,IAAD,CAAKsB,KAAM,EAAX,SACE,cAACrB,EAAD,MAGF,cAAC,IAAD,CAAKqB,KAAM,EAAX,SACE,cAAChB,EAAD,W,sCC5FK,SAASiB,EAAY7E,GAAQ,IAClCoC,EAAgBD,qBAAWN,GAA3BO,YADiC,EAEpBA,EAAYnC,SAAzB0B,EAFiC,EAEjCA,GAAIhB,EAF6B,EAE7BA,KAF6B,EAIPqB,mBAAS,IAJF,mBAIlC8C,EAJkC,KAIvBC,EAJuB,OAKK/C,mBAAS,CAAC,CAAEL,KAAIhB,UALrB,mBAKlCqE,EALkC,KAKjBC,EALiB,OAMajD,qBANb,mBAMlCkD,EANkC,KAMbC,EANa,KAYnCC,EAAY,uCAAG,WAAOC,GAAP,eAAAC,EAAA,uDAEb3E,EAAO0E,GACJE,OAAS,GAChB5C,IAAM6C,IAAN,0BAA6B7E,IAAQkC,MAAK,SAACC,GAAc,IAC/CC,EAASD,EAASC,KAAlBA,KACRI,QAAQC,IAAIL,GACRA,EAAKwC,OACPJ,EACEpC,EAAKjC,KAAI,SAAC2E,GAAD,MAAW,CAAEtE,IAAKsE,EAAK9D,GAAI+D,MAAOD,EAAK9E,UAGlDwE,EAAuB,OAZV,2CAAH,sDAkBZQ,EAAqB,SAACC,GACtBA,IAAcxD,EAAYnC,SAAS0B,IACvCsD,GAAmB,SAACY,GAAD,OACjBA,EAAgBC,QAAO,SAACL,GAAD,OAAUA,EAAK9D,KAAOiE,SAsDjD,OACE,cAAC,IAAD,CACEvE,MAAM,YACNoB,QAASzC,EAAMyC,QACfsD,OAAQ,KACRC,SAAUhG,EAAMiG,QAJlB,SAME,eAAC,IAAD,CAAKC,OAAQ,CAAC,EAAG,IAAjB,UACE,cAAC,IAAD,CAAKtB,KAAM,GAAX,SACE,cAAC,IAAD,CACEnD,KAAK,QACL0E,YAAY,aACZC,UAAU,UACVC,SA5Fe,SAAChB,GACxBN,EAAaM,EAAMiB,OAAOZ,QA4FlBA,MAAOZ,MAGX,cAAC,IAAD,CAAKF,KAAM,GAAX,SACE,cAAC,IAAD,CACErE,MAAO,CAAEgG,MAAO,QAChBC,SAAUpB,EACVqB,QAASvB,EACTwB,SAxEuB,SAAC/F,EAAM8F,GAEtC,GADAtB,EAAuB,IAEgD,IAArEH,EAAgBc,QAAO,SAACL,GAAD,OAAUA,EAAK9D,KAAO8E,EAAQtF,OAAKoE,OAC1D,CACA,IAAMoB,EAAY,CAAEhF,GAAI8E,EAAQtF,IAAKR,KAAM8F,EAAQf,OACnDT,GAAmB,SAACY,GAAD,OACjBA,EAAgBe,OAAO,CAACD,SA6DtB,SAME,cAAC,IAAME,OAAP,CAAcpF,KAAK,QAAQ0E,YAAY,cAAcW,aAAW,QAGpE,cAAC,IAAD,CAAKlC,KAAM,GAAX,SACE,+CAEF,cAAC,IAAD,CAAKA,KAAM,GAAX,SACE,cAAC,IAAOmC,MAAR,CAAcC,SAAU,EAAxB,SACGhC,EAAgBlE,KAAI,SAACmG,GAAD,OACnB,cAAC,EAAD,CACE/G,aAAW,EACXC,YAAU,EAEVF,SAAUgH,EACV7G,SAAUuF,GAFLsB,EAAWtF,WAOxB,cAAC,IAAD,CAAKiD,KAAM,GAAX,SACE,cAAC,IAAD,CAAQsC,OAAK,EAAC5F,KAAK,UAAUI,QAlFX,WACxB,IAAMyF,EAAU,CACdxG,KAAMmE,EACNsC,QAASpC,EAAgBlE,KAAI,SAACuG,GAAD,OAAYA,EAAO1F,OAe5C2F,EAAU,SAACpE,GACfqE,IAAQrE,MAAR,0BACAC,QAAQD,MAAM,kBAAmBA,IAGnCP,IACGC,KACC,UACA,CAAEG,KAAK,eAAMoE,IACb,CACEK,QAAS,CACP,eAAgB,sBAIrB3E,MA3Be,SAACC,GAAc,IAAD,EACGA,EAASC,KAAlCC,EADsB,EACtBA,QAASE,EADa,EACbA,MAAOH,EADM,EACNA,KAEpBC,GACFuE,IAAQvE,QAAR,UAAmB8B,EAAnB,0BACA9E,EAAMyH,SAAS1E,KAEfI,QAAQC,IAAI,QACZkE,EAAQpE,MAmBOoE,GAEnBtH,EAAMiG,WA+CA,2B,+BCjHKyB,MA/Bf,YAAgD,IAAxBC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,UAAa,EACK5F,oBAAS,GADd,mBACtC6F,EADsC,KACnBC,EADmB,KAOvCC,EAAiB,WACrBD,GAAqB,IAQvB,OACE,cAAC,IAAD,CACEzG,MAAM,wCACNoB,QAASoF,EACT1D,gBAjBwB,SAAC1B,GAC3BqF,EAAqBrF,IAiBnBmF,UAVkB,WACpBG,IACAH,KASE5B,SAAU+B,EACVC,OAAO,MACPC,WAAW,KAPb,SASGN,K,OCrBQ,SAASO,EAAUlI,GAAQ,IAChCmI,EAAwBnI,EAAxBmI,UAAWC,EAAapI,EAAboI,SAEbC,EAAM,WAAOF,EAAUxG,GAAjB,cAEZ,OACE,cAAC,IAAD,CAAM6B,GAAI6E,EAAV,SACE,cAAC,IAAD,CACEhH,MAAO8G,EAAUxH,KACjB2H,WAAS,EACTlC,UAAU,YACV7F,MAAO,CAAEC,gBAAiB,2BAC1B+H,MACE,cAAC,EAAD,CAAcX,UAAW,kBAAMQ,EAASD,EAAUxG,KAAlD,SACE,cAAC,IAAD,CACE6G,MAAM,SACNlH,KAAK,OACLC,KAAM,cAACkH,EAAA,EAAD,CAAeC,aAAa,cAV1C,SAeE,cAAC,IAAO3B,MAAR,CAAcC,SApBK,EAoBnB,SACGmB,EAAUf,QAAQtG,KAAI,SAACmG,GAAD,OACrB,cAAC,EAAD,CAEEhH,SAAUgH,EACV/G,aAAW,GAHb,UACUiI,EAAUxG,GADpB,YAC0BsF,EAAWtF,c,IC9BzCgH,EAAoBC,IAApBD,QAAoBC,IAAXC,OAEF,SAASC,EAAiBnB,GACvC,OACE,eAAC,IAAD,CACEpH,MAAO,CACLC,gBAAiB,cACjBmE,UAAW,SAHf,UAME,cAAC5C,EAAD,IACA,cAAC4G,EAAD,UAAUhB,OCeDoB,MAxBf,YAA4D,IAAvBC,EAAsB,EAAjCC,UAAyB5I,EAAQ,6BACjD+B,EAAgBD,qBAAWN,GAA3BO,YAIR,OAFAe,QAAQC,IAAI,eAAgBhB,GAG1B,cAAC,IAAD,2BACM/B,GADN,IAEE6I,OAAQ,SAACC,GACP,OAAO/G,EAAY2B,gBACjB+E,EAAiB,cAACE,EAAD,eAAeG,KAEhC,cAAC,IAAD,CACE3F,GAAI,CACF4F,SAAU,SACVC,MAAO,CAAEC,KAAMH,EAAWI,kB,kBCEhCC,EAAqBC,IAArBD,MAAOE,EAAcD,IAAdC,UACPC,EAA2Bf,IAA3Be,MAAOd,EAAoBD,IAApBC,OAAQF,EAAYC,IAAZD,QAER,SAASiB,GAAW5J,GAAQ,IACjC6J,EAA6B7J,EAA7B6J,QAASC,EAAoB9J,EAApB8J,gBACLC,EAAY/J,EAAMgK,SAAtBrI,GACIsI,EAAajK,EAAMkK,UAAvBvI,GACAwI,EAAaC,cAAbD,SACFE,EAAa,WAAOF,EAAP,mCAA0CJ,GALrB,EAOd/H,mBAAS,IAPK,mBAOjCX,EAPiC,KAO1BiJ,EAP0B,OAQFtI,mBAAS,IARP,mBAQjCuI,EARiC,KAQpBC,EARoB,OASRxI,mBAAS,IATD,mBASjCyI,EATiC,KASvBC,EATuB,OAUF1I,oBAAS,GAVP,mBAUjC2I,EAViC,KAUpBC,EAVoB,OAWN5I,oBAAS,GAXH,mBAWjC6I,EAXiC,KAWtBC,EAXsB,QAYc9I,mBAAS,IAZvB,qBAYjCkD,GAZiC,MAYZC,GAZY,MAahC/C,GAAgBD,qBAAWN,GAA3BO,YAER2I,qBAAU,WACR,IAAMC,EAAc,uCAAG,sBAAA1F,EAAA,sEACf3C,IACH6C,IAAI6E,GACJxH,MACC,SAACC,GAAc,IAAD,EACqBA,EAASC,KAAlCC,EADI,EACJA,QAASE,EADL,EACKA,MAAOH,EADZ,EACYA,KAExB,GADAI,QAAQC,IAAI,iBAAkBN,GAC1BE,EAAS,CACX,IAAIiI,EAGG,MAFLlI,EAAK0H,SAASS,MACZ,SAACzF,GAAD,OAAUA,EAAK9D,KAAOS,GAAYnC,SAAS0B,MAG/C2I,EAASvH,EAAK1B,OACdmJ,EAAezH,EAAKwH,aACpBG,EAAY3H,EAAK0H,UACjBK,EAAaG,QAEb1D,YAAQ,iCACRpE,QAAQD,MAAMA,MAGlB,SAACiI,GACChI,QAAQD,MAAR,cAAqBmH,GAAiBc,MAGzCC,SAAQ,WACPR,GAAe,MA3BE,2CAAH,sDA+BJ,uCAAG,sBAAAtF,EAAA,sDACjB3C,IACG6C,IAAI,mBAAoB,CACvB6F,OAAQ,CAAEC,SAAUC,KAAKC,UAAU,CAACrB,KACpCsB,iBAAkB,SAACJ,GACjB,OAAOK,IAAGF,UAAUH,MAGvBxI,MACC,SAACC,GAAc,IAAD,EACqBA,EAASC,KAAlCC,EADI,EACJA,QAAgBD,GADZ,EACKG,MADL,EACYH,MACxBI,QAAQC,IAAIL,EAAK,IACbC,GACFmC,GACEpC,EAAK,GAAGqE,QAAQtG,KAAI,SAAC2E,GAAD,MAAW,CAC7BtE,IAAKsE,EAAK9D,GACV+D,MAAOD,EAAK9E,aAKpB,SAACuC,GACCC,QAAQD,MAAMA,MAtBH,2CAAH,qDA2BhByI,GACAX,MACC,CAACb,EAAUJ,IAEd,IAaM6B,GAAuB,SAAChG,GAC5BiE,EAAQgC,eAAe9B,EAASnE,GAAW,WACzC8E,GAAY,SAACoB,GAAD,OACVA,EAAmBhG,QAAO,SAACL,GAAD,OAAUA,EAAK9D,KAAOiE,YAuChDmG,GACJ,qBACExL,MAAO,CACLyL,SAAU,QACVrH,UAAW,QACXsH,QAAS,OACTC,eAAgB,SAChBC,WAAY,UANhB,SASE,cAAC,kBAAD,CAAiBxI,MAAM,UAAUlC,KAAM,OAI3C,OACE,cAAC,IAAD,CACEgB,QAASzC,EAAMyC,QACfsD,OAAQ,KACRC,SAAUhG,EAAMoM,YAChB7F,MAAM,OACNhG,MAAO,CAAEyL,SAAU,KALrB,SAOGrB,EACCoB,GAEA,eAAC,IAAD,CAAQxL,MAAO,CAAEC,gBAAiB,eAAlC,UACE,cAAC,EAAD,CACED,MAAO,CACLC,gBAAiB,cACjBkE,YAAa,GAHjB,SAME,cAAC8E,EAAD,CACE6C,MAAO,EACPC,SAAU,CACR/K,KAAM,cAACgL,EAAA,EAAD,IACNC,QAAS,aACTnG,SAzDY,SAACoG,GACzB5C,EAAQ6C,gBAAgB3C,EAAS0C,GAAU,WACzC3C,EAAgBC,EAAS,CAAE4C,SAAU,QAASF,aAAY,WACxDnC,EAASmC,WAiDL,SAQGpL,MAGL,cAAC,EAAD,UACE,eAAC,IAAD,CAAQd,MAAO,CAAEC,gBAAiB,eAAlC,UACE,eAAC,EAAD,CAASD,MAAO,CAAEkE,aAAc,IAAhC,UACE,cAAC+E,EAAD,CAAO6C,MAAO,EAAd,yBACA,cAAC3C,EAAD,CACE4C,SAAU,CACR/K,KAAM,cAACgL,EAAA,EAAD,IACNC,QAAS,mBACTnG,SA/Dc,SAACuG,GAC/B/C,EAAQgD,sBAAsB9C,EAAS6C,GAAgB,WACrDpC,EAAeoC,QAyDL,SAOGrC,IAEH,cAACf,EAAD,CAAO6C,MAAO,EAAd,sBACA,cAAC,IAAD,UACE,cAAC,IAAD,CACE9L,MAAO,CAAEgG,MAAO,QAChBJ,YAAY,wBACZM,QAASvB,GACTwB,SArHQ,SAAC/F,EAAM8F,GAAa,IACjCqG,EAAgBrG,EAArBtF,IAEN,GAAkE,IAA9DsJ,EAAS3E,QAAO,SAACL,GAAD,OAAUA,EAAK9D,KAAOmL,KAAavH,OAAc,CACnE,IAAMwH,EAAgB,CAAEpL,GAAImL,EAAanM,KAAMA,GAC/CkJ,EAAQmD,YAAYjD,EAAS+C,GAAa,WACxCpC,GAAY,SAACoB,GAAD,OACVA,EAAmBlF,OAAO,CAACmG,gBAiHrB,cAAC,IAAD,UACE,cAAC,IAAOhG,MAAR,CAAcC,SAAU,EAAGzG,MAAO,CAAE0M,UAAW,IAA/C,SACGxC,EAAS3J,KAAI,SAACmG,GAAD,OACZ,cAAC,EAAD,CAEEhH,SAAUgH,EACV/G,aAAW,EACXC,YAAU,EACVC,SAAUwL,IALZ,UACU7B,EADV,YACqB9C,EAAWtF,eAUxC,eAACgI,EAAD,CAAOpJ,MAAO,CAAEC,gBAAiB,eAAjC,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAKoE,KAAM,GAAX,SACE,cAAC,IAAD,CACElD,QArHG,WACrBmI,EAAQqD,SAASnD,GAAS,WACxBe,GAAa,OAoHGxJ,KAAK,UACL6L,SAAUtC,EACVtK,MAAO,CAAEgG,MAAO,QAJlB,SAMGsE,EAAY,SAAW,gBAG5B,cAAC,IAAD,CAAKjG,KAAM,GAAX,SACE,cAAC,EAAD,CAAcgD,UAxHP,WACvBiC,EAAQuD,WAAWrD,EAASE,GAAU,WACpCH,EAAgBC,EAAS,CAAE4C,SAAU,WAAY,WAC/C3M,EAAMoM,qBAqHM,SACE,cAAC,IAAD,CACE9K,KAAK,SACLqC,MAAM,MACNpD,MAAO,CAAEgG,MAAO,QAHlB,gCAUN,cAAC,IAAD,IACA,cAACmD,EAAD,CAAW2D,QAAM,EAAjB,qBACA,cAAC,IAAD,CAAKnH,OAAQ,CAAC,EAAG,GAAjB,SACGlG,EAAMsN,WAAWxM,KAAI,SAACyM,GACrB,OACEA,EAAW5L,KAAOsI,GAChB,cAAC,IAAD,CAAyBrF,KAAM,GAA/B,SACE,cAAC,IAAD,CACEsC,OAAK,EACL5F,KAAK,SACLI,QAAS,kBAvHX8L,EAuHgCD,OAtHtD1D,EAAQ4D,SAAS1D,EAASE,EAAUuD,EAAS7L,GAAI3B,EAAM0N,OAAO,WAC5DnG,IAAQvE,QAAR,wBAAiCwK,EAAS7M,UAFvB,IAAC6M,GAoHA,SAKGD,EAAW5M,QANN4M,EAAW5L,sB,aCvQ9B,SAASgM,GAAS3N,GAAQ,IAC/BgK,EAAoBhK,EAApBgK,SAAU0D,EAAU1N,EAAV0N,MADoB,EAEY1L,oBAAS,GAFrB,mBAE/B4L,EAF+B,KAEZC,EAFY,KAIhCC,EAAuB,WAC3BD,GAAqB,IAGjBE,EAAwB,WAC5BF,GAAqB,IAGvB,OAAI7D,EAEA,cAAC,KAAD,CAAWgE,YAAahE,EAASrI,GAAI+L,MAAOA,EAA5C,SACG,SAACO,GAAD,OACC,0DACEC,IAAKD,EAASE,UACVF,EAASG,iBACTH,EAASI,gBAHf,cAKE,qBACE9N,MAAO,CACLC,gBAAiB,QACjB8N,WAAY,EACZC,YAAa,EACbC,aAAc,EACdvB,UAAW,EACX1I,WAAY,EACZC,cAAe,EACfE,YAAa,GACb+J,aAAc,EACdC,UAAW,8BACXhO,OAAQ,WAEVgB,QAASoM,EAdX,SAgBG9D,EAAS3I,QAEZ,cAACuI,GAAD,aACEnH,QAASmL,EACTxB,YAAa2B,GACT/N,WAOP,K,iCC/CI,SAAS2O,GAAS3O,GAAQ,IAC/B6J,EAAuB7J,EAAvB6J,QAASK,EAAclK,EAAdkK,UACR0E,EAF6B,iBAEf1E,GAFe,EAIZlI,mBAAS,IAJG,mBAI/B6M,EAJ+B,KAIxBC,EAJwB,OAKM9M,oBAAS,GALf,mBAK/B+M,EAL+B,KAKfC,EALe,OAMZhN,mBAAS,IANG,mBAM/BX,EAN+B,KAMxBiJ,EANwB,KAQtCS,qBAAU,WACR5H,QAAQC,IAAI,gBAAiB8G,GAC7B,IAAI+E,EAAYC,MAAM5F,KAAKY,EAAU2E,OACrCI,EAAUE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,SAAWD,EAAMC,YACxDR,EAASG,KACR,CAAC/E,EAAU2E,QAEd,IAAMU,EAAa,uCAAG,sBAAAjK,EAAA,2DAChBjE,EAAMkE,OAAS,GADC,gCAEZsE,EAAQ2F,QAAQZ,EAAUjN,GAAIN,GAAO,SAACoO,EAASvM,GAC/CA,EACFqE,IAAQrE,MAAR,yBAEA4G,EAAgB2F,EAAQ9N,GAAI,CAAEgL,SAAU,MAAO8C,YAEjDC,OARgB,2CAAH,qDAiBbA,EAAqB,WACzBpF,EAAS,IACT0E,GAAkB,IAOdlF,EAAkB,SAACC,EAAS4F,EAAeC,GAAc,IACrDjD,EAAgCgD,EAAhChD,SAAUF,EAAsBkD,EAAtBlD,SAAUgD,EAAYE,EAAZF,QAI5B,OAFAtM,QAAQC,IAAI,uBAEJuJ,GACN,IAAK,QACHxJ,QAAQC,IAAI,oBACZ0L,EACE,aAAID,GAAO/N,KAAI,SAAC+O,GACd,OAAIA,EAASlO,KAAOoI,EACX,2BACF8F,GADL,IAEExO,MAAOoL,IAECoD,MAGhB,MAGF,IAAK,MACH1M,QAAQC,IAAI,kBACZqM,EAAQH,SAAWT,EAAMtJ,OACzBuJ,GAAS,SAACgB,GAAD,OAAeA,EAAUlJ,OAAO6I,MACzC,MAGF,IAAK,SACHtM,QAAQC,IAAI,oBACZ0L,GAAS,SAACgB,GAAD,OACPA,EAAUhK,QAAO,SAACiK,GAAD,OAAUA,EAAKpO,KAAOoI,QAEzC,MAGF,QACE5G,QAAQC,IAAI,wBAIZwM,IACFzM,QAAQC,IAAI,eACZwM,MAIEI,EACJ,cAAC,IAAD,CACEnM,QAAQ,gBACRtD,MAAO,CACLgG,MAAO,OACPhC,WAAY,EACZC,cAAe,EACfE,YAAa,GACbD,aAAc,IAPlB,SAUE,cAAC,IAAD,UACE,iCAASmK,EAAUjO,WAKnBsP,EACJ,qBACE1P,MAAO,CACLgG,MAAO,OACP/B,cAAe,EACfD,WAAY,EACZ+J,WAAY,EACZC,YAAa,EACbC,aAAc,EACdvB,UAAW,GARf,SAWG8B,EACC,qCACE,cAAC,IAAD,CACExO,MAAO,CACLC,gBAAiB,QACjB+D,WAAY,EACZC,cAAe,EACfE,YAAa,GACb+J,aAAc,EACdD,aAAc,GACdE,UAAW,8BACXhO,OAAQ,QAEVyF,YAAY,iCACZ+J,aAAcX,EACdlJ,SA/FgB,SAAChB,GACzBiF,EAASjF,EAAMiB,OAAOZ,UAgGhB,cAAC,IAAD,CACEnF,MAAO,CACLC,gBAAiB,QACjBmD,MAAO,QACP8K,aAAc,GAEhB/M,QAAS6N,EANX,sBAUA,cAAC,IAAD,CACEjO,KAAK,OACLC,KAAM,cAAC4O,GAAA,EAAD,IACNzO,QAASgO,OAIb,cAAC,IAAD,CAAQpO,KAAK,OAAOC,KAAM,cAAC6O,GAAA,EAAD,IAAkB1O,QA3HxB,WACxBsN,GAAkB,IA0Hd,gCAON,OACE,eAAC,IAAD,CACEzO,MAAO,CACLC,gBAAiB,0BACjBiO,aAAc,GAHlB,UAMGuB,EACD,cAAC,KAAD,CAAWK,YAAazB,EAAUjN,GAAlC,SACG,SAACsM,GAAD,OACC,8CACEC,IAAKD,EAASE,UACVF,EAASqC,gBAFf,IAGE/P,MAAO,CAAEgG,MAAO,QAHlB,UAKGsI,EAAM/N,KACL,SAACyP,EAAU7C,GAAX,OACE6C,GACE,cAAC,IAAD,CAAuB3L,KAAM,GAA7B,SACE,cAAC+I,GAAD,aAEE3D,SAAUuG,EACV7C,MAAOA,EACP5D,gBAAiBA,GACb9J,GAJCuQ,EAAS5O,KAFR4O,EAAS5O,OAWxBsM,EAAS9H,mBAIf8J,KCnLQO,I,UCCAC,OAff,SAAsBzQ,GACpB,OACE,cAAC,KAAD,CACE0Q,OAAO,MACPrP,MAAM,MACNsP,SAAS,qDACTpI,MACE,cAAC,IAAD,CAAM/E,GAAG,UAAT,SACE,cAAC,IAAD,CAAQlC,KAAK,UAAb,4BCqJKsP,OAhJf,SAAoB5Q,GAAQ,IAClBmK,EAAaC,cAAbD,SACA/H,EAAgBD,qBAAWN,GAA3BO,YAFiB,EAIqBJ,mBAAS,IAJ9B,mBAIlBgD,EAJkB,KAIDC,EAJC,OAK6BjD,qBAL7B,mBAKlBkD,EALkB,KAKGC,EALH,KAOzB4F,qBAAU,YACQ,uCAAG,4BAAAzF,EAAA,sDACXgC,EAAU,SAACpE,GACfC,QAAQD,MAAMA,GACdlD,EAAMiG,WAGRtD,IACG6C,IAAI,mBAAoB,CACvB6F,OAAQ,CAAEC,SAAUC,KAAKC,UAAU,CAACrB,KACpCsB,iBAAkB,SAACJ,GACjB,OAAOK,IAAGF,UAAUH,MAGvBxI,MACC,SAACC,GAAc,IAAD,EACqBA,EAASC,KAAlCC,EADI,EACJA,QAASE,EADL,EACKA,MAAOH,EADZ,EACYA,KACpB8N,EAAuB,MAAR9N,EAAe,KAAOA,EAAK,GAC1CC,GAAW6N,EACb5L,EAAmBlC,EAAK,GAAGqE,SAE3BE,EAAQpE,MAGZ,SAACA,GACCoE,EAAQpE,MAxBG,2CAAH,qDA6BhByI,KACC,IAEH,IAAMvG,EAAY,uCAAG,WAAOC,GAAP,eAAAC,EAAA,uDAEb3E,EAAO0E,GACJE,OAAS,GAChB5C,IAAM6C,IAAN,0BAA6B7E,IAAQkC,MAAK,SAACC,GAAc,IAC/CC,EAASD,EAASC,KAAlBA,KACRI,QAAQC,IAAIL,GACRA,EAAKwC,OACPJ,EACEpC,EAAKjC,KAAI,SAAC2E,GAAD,MAAW,CAAEtE,IAAKsE,EAAK9D,GAAI+D,MAAOD,EAAK9E,UAGlDwE,EAAuB,OAZV,2CAAH,sDAkBZQ,EAAqB,SAACC,GACtBA,IAAcxD,EAAYnC,SAAS0B,IACvCsD,GAAmB,SAACY,GAAD,OACjBA,EAAgBC,QAAO,SAACL,GAAD,OAAUA,EAAK9D,KAAOiE,SAuCjD,OACE,cAAC,IAAD,CACEvE,MAAM,cACNoB,QAASzC,EAAMyC,QACfsD,OAAQ,KACRC,SAAUhG,EAAMiG,QAJlB,SAME,eAAC,IAAD,CAAKC,OAAQ,CAAC,EAAG,IAAjB,UACE,cAAC,IAAD,CAAKtB,KAAM,GAAX,SACE,cAAC,IAAD,CACErE,MAAO,CAAEgG,MAAO,QAChBC,SAAUpB,EACVqB,QAASvB,EACTwB,SAhDuB,SAAC/F,EAAM8F,GAEtC,GADAtB,EAAuB,IAEgD,IAArEH,EAAgBc,QAAO,SAACL,GAAD,OAAUA,EAAK9D,KAAO8E,EAAQtF,OAAKoE,OAC1D,CACA,IAAMoB,EAAY,CAAEhF,GAAI8E,EAAQtF,IAAKR,KAAM8F,EAAQf,OACnDT,GAAmB,SAACY,GAAD,OACjBA,EAAgBe,OAAO,CAACD,SAqCtB,SAME,cAAC,IAAME,OAAP,CAAcpF,KAAK,QAAQ0E,YAAY,cAAcW,aAAW,QAGpE,cAAC,IAAD,CAAKlC,KAAM,GAAX,SACE,+CAEF,cAAC,IAAD,CAAKA,KAAM,GAAX,SACE,cAAC,IAAOmC,MAAR,CAAcC,SAAU,EAAxB,SACGhC,EAAgBlE,KAAI,SAACmG,GAAD,OACnB,cAAC,EAAD,CACE/G,aAAW,EACXC,YAAU,EAEVF,SAAUgH,EACV7G,SAAUuF,GAFLsB,EAAWtF,WAOxB,cAAC,IAAD,CAAKiD,KAAM,GAAX,SACE,cAAC,IAAD,CAAQsC,OAAK,EAAC5F,KAAK,UAAUI,QA1DX,WACxB,IAAIyF,EAAU,CACZgD,WACA/C,QAASpC,EAAgBlE,KAAI,SAACuG,GAAD,OAAYA,EAAO1F,OAElDgB,IAAMmO,IAAI,UAAW3J,GAAStE,MAC5B,SAACC,GAAc,IAAD,EACqBA,EAASC,KAAlCC,EADI,EACJA,QAASD,EADL,EACKA,KAAMG,EADX,EACWA,MACnBF,GACFG,QAAQC,IAAIL,GACZwE,IAAQvE,QAAQ,kCAEhBuE,IAAQrE,MAAM,4BACdC,QAAQD,MAAMA,OAGlB,SAACA,GACCqE,IAAQrE,MAAM,4BACdC,QAAQD,MAAMA,OAwCZ,4BChJF2F,I,OAAoBD,IAApBC,QAAQF,GAAYC,IAAZD,QAED,SAASoI,GAAO/Q,GAAQ,IAAD,EACEgC,oBAAS,GADX,mBAChB4I,GADgB,aAEgB5I,oBAAS,GAFzB,mBAE7BgP,EAF6B,KAETC,EAFS,OAGAjP,mBAAS,IAHT,mBAG7BkP,EAH6B,KAGjBC,EAHiB,OAIIhP,qBAAWN,GAA3CO,EAJ4B,EAI5BA,YAAaC,EAJe,EAIfA,eAErB0I,qBAAU,YACO,uCAAG,4BAAAzF,EAAA,uDACVgG,EAAWlJ,EAAYnC,SAASmR,QAEzB7L,QACX5C,IACG6C,IAAI,mBAAoB,CACvB6F,OAAQ,CAAEC,SAAUC,KAAKC,UAAUF,IACnCG,iBAAkB,SAACJ,GACjB,OAAOK,IAAGF,UAAUH,MAGvBxI,MACC,SAACC,GAAc,IAAD,EACqBA,EAASC,KAAlCC,EADI,EACJA,QAASE,EADL,EACKA,MAAOH,EADZ,EACYA,KACpBC,GACFG,QAAQC,IAAI,0CACZD,QAAQC,IAAIL,GACZoO,EAAcpO,IAEdI,QAAQC,IAAIF,MAGhB,SAACiI,GACChI,QAAQD,MAAM,uBAAwBiI,MAK9CP,GAAe,GA5BC,2CAAH,qDA+BfyG,KACC,IAEH,IAQMC,EAAoB,SAACnH,GACzBhH,QAAQC,IAAI,kBAAmB+G,GAE/BxH,IACG4O,OAAO,UAAW,CAAElG,OAAQ,CAAElB,cAC9BtH,MACC,SAACC,GACC,IAAIA,EAASC,KAAKC,QAUhB,MAAM,IAAIwO,MAAM1O,EAASC,KAAKG,OAT9BiO,GAAc,SAACM,GAKb,OAJApP,EAAe,CAAEf,KAAM,eAAgB6I,SAAUA,IAC/BsH,EACf3L,QAAO,SAAC4L,GAAD,OAAeA,EAAU/P,KAAOwI,KACvCrJ,KAAI,SAAC6Q,GAAD,OAAWA,EAAMhQ,SAG1B4F,IAAQvE,QAAQ,iCAKpB,SAACE,GACC,MAAM,IAAIsO,MAAMtO,MAGnB0O,OAAM,SAACC,GACNtK,IAAQrE,MAAR,0BACAC,QAAQD,MAAM,oBAAqB2O,OAWzC,OACE,eAAC,IAAD,CACEzL,UAAU,oCACV7F,MAAO,CACLC,gBAAiB,eAHrB,UAME,cAAC,GAAD,CACE4F,UAAU,wBACV7F,MAAO,CACLC,gBAAiB,cACjBkE,YAAa,EACbD,aAAc,GALlB,SAQE,eAAC,IAAD,CAAKZ,QAAQ,gBAAgBC,MAAM,SAAnC,UACE,qBAAKsC,UAAU,QAAf,oBACA,cAAC,IAAD,CAAQ9E,KAAK,UAAUI,QA9DA,WAC7BuP,GAAsB,IA6DhB,+BAKJ,cAAC,GAAD,UACGC,EAAW3L,OACV,cAAC,IAAD,CAAKW,OAAQ,CAAC,GAAI,IAAlB,SACGgL,EAAWpQ,KAAI,SAAC4Q,GAAD,OACd,cAAC,IAAD,CAAwB9M,KAAM,EAA9B,SACE,cAACsD,EAAD,CAAWC,UAAWuJ,EAAWtJ,SAAUkJ,KADnCI,EAAU/P,SAMxB,cAAC,IAAWmQ,KAAZ,CAAiBxQ,KAAK,YAAtB,qCAKJ,cAAC,EAAD,CACEmB,QAASuO,EACT/K,QAhFyB,WAC7BgL,GAAsB,IAgFlBxJ,SA/CoB,SAACsK,GACzBZ,GAAc,SAACa,GAEb,OADA3P,EAAe,CAAEf,KAAM,YAAa6I,SAAU4H,EAAWpQ,KAClDqQ,EAAcpL,OAAOmL,Y,mDCpFnB,SAASE,GAAMjS,GAAQ,IAC5BkS,EAAqClS,EAArCkS,SAAUC,EAA2BnS,EAA3BmS,UAAWC,EAAgBpS,EAAhBoS,IAAKrM,EAAW/F,EAAX+F,OAC5BzD,EAAUC,cAFmB,EAGKJ,qBAAWN,GAA3CO,EAH2B,EAG3BA,YAAaC,EAHc,EAGdA,eAEjBD,EAAY2B,iBACdzB,EAAQ+P,QAAQ,WA4BlB,OACE,qBAAKjM,UAAU,OAAf,SACE,qBAAKA,UAAU,MAAMkM,UAAU,EAA/B,SACE,eAAC,KAAD,CACE3R,KAAK,eACLyF,UAAU,aACVmM,cAAe,CACbC,UAAU,GAEZC,SAlCiB,SAACtL,GACxBxE,IACGC,KAAKwP,EAAKjL,EAAS,CAClBK,QAAS,CACP,eAAgB,sBAGnB3E,MACC,SAACC,GAAc,IAAD,EACqBA,EAASC,KAAlCC,EADI,EACJA,QAASE,EADL,EACKA,MAAOH,EADZ,EACYA,KACpBC,GACFX,EAAe,CAAEf,KAAM,QAASrB,SAAU8C,IAC1CT,EAAQW,KAAK,aAEbsE,IAAQrE,MAAR,oBAA2BgP,IAC3B/O,QAAQD,MAAMA,OAGlB,SAACiI,GACC5D,IAAQrE,MAAR,oBAA2BgP,IAC3B/O,QAAQD,MAAMiI,OAQhB,UAQE,cAAC,IAAW3B,MAAZ,CACEjJ,MAAO,CAAEoD,MAAO,kBAAmBF,UAAW,UAC9C4I,MAAO,EAFT,SAIG8F,IAEW,WAAbD,GACC,cAAC,KAAKQ,KAAN,CACE/R,KAAK,OACLgS,MAAO,CACL,CACEC,UAAU,EACVrL,QAAS,wBALf,SASE,cAAC,IAAD,CACEsL,OAAQ,cAACC,GAAA,EAAD,CAAc1M,UAAU,wBAChCD,YAAY,OACZ1E,KAAK,QACLsR,YAAU,EACV3M,UAAU,cAIhB,cAAC,KAAKsM,KAAN,CACE/R,KAAK,QACLgS,MAAO,CACL,CACEC,UAAU,EACVtR,KAAM,QACNiG,QAAS,6BANf,SAUE,cAAC,IAAD,CACEsL,OAAQ,cAACG,GAAA,EAAD,IACR7M,YAAY,QACZ1E,KAAK,QACLsR,YAAU,EACV3M,UAAU,cAGd,cAAC,KAAKsM,KAAN,CACE/R,KAAK,WACLgS,MAAO,CACL,CACEC,UAAU,EACVrL,QAAS,4BALf,SASE,cAAC,IAAM0L,SAAP,CACEJ,OAAQ,cAACK,GAAA,EAAD,IACR/M,YAAY,WACZ1E,KAAK,QACLsR,YAAU,EACV3M,UAAU,cAGd,eAAC,IAAD,CAAKF,OAAQ,CAAC,EAAG,IAAjB,UACE,cAAC,IAAD,CAAKtB,KAAM,GAAX,SACE,cAAC,IAAD,CACEtD,KAAK,UACL6R,SAAS,SACT/M,UAAU,oBACVoC,MAAM,QAJR,SAMgB,UAAb0J,EAAuB,SAAW,eAGtCnM,GAAU,cAAC,IAAD,CAAKnB,KAAM,GAAX,SAAgBmB,cCzHxB,SAASqN,GAAMpT,GAC5B,OACE,cAAC,GAAD,CACEkS,SAAS,QACTE,IAAI,SACJD,UAAU,QACVpM,OACE,yDACoB,IAClB,iCACE,cAAC,IAAD,CAAMvC,GAAG,UAAT,mCCVG,SAAS6P,GAAOrT,GAC7B,OACE,cAAC,GAAD,CACEkS,SAAS,SACTE,IAAI,UACJD,UAAU,SACVpM,OACE,iEAC4B,IAC1B,iCACE,cAAC,IAAD,CAAMvC,GAAG,SAAT,+B,kCCDJqF,GAAoBD,IAApBC,OAAQF,GAAYC,IAAZD,QAED,SAAS2K,GAAUtT,GAAQ,IAChCmK,EAAaC,cAAbD,SACFoJ,EAAQ,WAAOpJ,EAAP,cACRqJ,EAAQ,UAAMD,EAAN,SAHyB,EAKLvR,oBAAS,GALJ,mBAKhCyR,EALgC,KAKrBC,EALqB,OAMD1R,oBAAS,GANR,mBAMhC2I,EANgC,KAMnBC,EANmB,OAOG5I,mBAAS,IAPZ,mBAOhC2R,EAPgC,KAOjBC,EAPiB,OAQW5R,oBAAS,GARpB,mBAQhC6R,EARgC,KAQbC,EARa,OASX9R,mBAAS,IATE,mBAShC+R,EATgC,KASxBC,EATwB,KAU/B5R,EAAgBD,qBAAWN,GAA3BO,YACFE,EAAUC,cAEhBY,QAAQC,IAAI,kBAAmB2Q,GAE/BhJ,qBAAU,YACU,uCAAG,sBAAAzF,EAAA,sDACnB3C,IAAM6C,IAAI+N,GAAU1Q,MAClB,SAACC,GAAc,IAAD,EACqBA,EAASC,KAAlCC,EADI,EACJA,QAASE,EADL,EACKA,MAAOH,EADZ,EACYA,KACxB,GAAIC,EAAS,CAAC,IACJ+Q,EAAoBhR,EAApBgR,OAAW1T,EADR,YACiB0C,EADjB,YAEXI,QAAQC,IAAI,8CACZD,QAAQC,IAAIL,GACZ6Q,EAAiBvT,GACjB2T,EAAUD,QAEVzR,EAAQW,KAAK,QACbE,QAAQD,MAAMA,MAGlB,SAACiI,GACC7I,EAAQW,KAAK,WACbE,QAAQD,MAAR,eAAsBiH,EAAtB,eAA6CgB,MAIjDP,GAAe,GArBI,2CAAH,qDAwBlBqJ,KACC,CAAC9J,IAEJ,IAQMqF,EAAO,uCAAG,WAAOvF,EAAU5I,EAAOuO,GAAxB,iBAAAtK,EAAA,6DACdoO,GAAa,GACTpE,EAAWyE,EAAOjO,QAAO,SAACoO,GAAD,OAAWA,EAAMvS,KAAOsI,KAAU,GAAG4E,MAC/DtJ,OACC4B,EAAU,CACZ8C,SAAUA,EACV5I,MAAOA,EACPiO,SAAUA,GAEZnM,QAAQC,IAAI,UAAW+D,GAEvBhE,QAAQC,IAAI,gCAXE,SAYRT,IACHC,KAAK4Q,EAAUrM,GACftE,MACC,SAACC,GACCK,QAAQC,IAAI,mCAAoCN,EAASC,MAD7C,MAEqBD,EAASC,KAAlCC,EAFI,EAEJA,QAASE,EAFL,EAEKA,MAAOH,EAFZ,EAEYA,KAExB,GAAIC,EAAS,CACX,IAAIyM,EAAO,2BAAQ1M,GAAR,IAAcuM,SAAUA,IACnC0E,GAAU,SAACG,GAAD,OACRA,EAAWrT,KAAI,SAACoT,GACd,OAAIA,EAAMvS,KAAOsI,EACR,2BACFiK,GADL,IAEErF,MAAOqF,EAAMrF,MAAMjI,OAAO6I,KAEhByE,QAGlBtE,EAAS7M,EAAMG,OAGnB,SAACA,GACCC,QAAQC,IAAI,2BAA4BF,GACxC0M,EAAS,KAAM1M,MAGlBkI,SAAQ,WACPjI,QAAQC,IAAI,6BACZsQ,GAAa,MAzCH,2CAAH,0DA6CPtG,EAAU,uCAAG,WAAOrD,EAASE,EAAU2F,GAA1B,eAAAtK,EAAA,sDACjBoO,GAAa,GACTvM,EAAU,CAAE4C,QAASA,EAASE,SAAUA,GAC5CtH,IACG4O,OAAOiC,EAAU,CAAEzQ,KAAMoE,IACzBtE,MACC,SAACC,GAAc,IAAD,EACqBA,EAASC,KAAlCC,EADI,EACJA,QAASE,EADL,EACKA,MAAOH,EADZ,EACYA,KAEpBC,IACFgR,GAAU,SAACG,GAAD,OACRA,EAAWrT,KAAI,SAACoT,GACd,OAAIA,EAAMvS,KAAOsI,EACR,2BACFiK,GADL,IAEErF,MAAOqF,EAAMrF,MAAM/I,QACjB,SAAC+J,GAAD,OAAcA,EAASlO,KAAOoI,OAGtBmK,QAGlBtE,EAAS7M,EAAMG,OAGnB,SAACA,GACC0M,EAAS,KAAM1M,MAGlBkI,SAAQ,WACPjI,QAAQC,IAAI,oBACZsQ,GAAa,MA/BA,2CAAH,0DAmCVU,EAAU,uCAAG,WAAOjN,EAASyI,GAAhB,SAAAtK,EAAA,sDACjBoO,GAAa,GACbvQ,QAAQC,IAAI,uBACZT,IACGmO,IAAI0C,EAAUrM,GACdtE,MACC,SAACC,GAAc,IAAD,EACeA,EAASC,KAA5BG,EADI,EACJA,MAAOF,EADH,EACGA,QAEf,OADAG,QAAQC,IAAI,iBAAkBN,EAASC,MACnCC,EAAgB4M,IACbA,EAAS1M,MAElB,SAACA,GACC,OAAO0M,EAAS1M,MAGnBkI,SAAQ,WACPjI,QAAQC,IAAI,oBACZsQ,GAAa,MAlBA,2CAAH,wDAsBVW,EAAY,uCAAG,WAAOlN,EAASyI,GAAhB,SAAAtK,EAAA,sDACnBnC,QAAQC,IAAI,uBAAwB+D,GACpCxE,IAAMmO,IAAIyC,EAAUpM,GAAStE,MAC3B,SAACC,GAAc,IAAD,EACeA,EAASC,KAA5BG,EADI,EACJA,MACR,OAFY,EACGF,QACK4M,IACbA,EAAS1M,MAElB,SAACA,GACC,OAAO0M,EAAS1M,MATD,2CAAH,wDAcZoR,EAAc,uCAAG,WACrBvK,EACA+C,EACAyH,EACA3E,GAJqB,SAAAtK,EAAA,sDAOrB8O,EADc,CAAErK,UAAS+C,cAAayH,gBAClB3E,GAPC,2CAAH,4DAUd5C,EAAc,SAACjD,EAAS+C,EAAa8C,GACzC0E,EAAevK,EAAS+C,EAAa,MAAO8C,IAsCxC/F,EAAU,CACd2F,UACApC,aACAF,SAtCe,SAACnD,EAAS6F,GACzB5C,EAAYjD,EAAS3H,EAAYnC,SAAS0B,GAAIiO,IAsC9C5C,cACAnB,eApCqB,SAAC9B,EAAS+C,EAAa8C,GAC5C0E,EAAevK,EAAS+C,EAAa,SAAU8C,IAoC/CnC,SAjCe,SACf1D,EACAyK,EACAC,EACAC,EACA9E,GAOA+E,EALa,CACXC,OAAQ,CAAEvE,YAAamE,EAAe9G,MAAOgH,GAC7CG,YAAa,CAAExE,YAAaoE,EAAa/G,OAAQ,GACjDkC,SAAUA,KAwBZlD,gBAnBsB,SAAC3C,EAAS1I,EAAOuO,GACvC,IAAIzI,EAAU,CAAE4C,UAAS1I,SACzB8B,QAAQC,IAAI,6BACZgR,EAAWjN,EAASyI,IAiBpB/C,sBAd4B,SAAC9C,EAASQ,EAAaqF,GAEnDwE,EADc,CAAErK,UAASQ,eACLqF,IAapByE,gBAIIS,EAAqB,SAACZ,GAO1B,OANAA,EAAMrF,MAAQqF,EAAMrF,MACjB/I,QAAO,SAAC+J,GAAD,OAA0B,MAAZA,KACrB/O,KAAI,SAAC+O,EAAUkF,GAEd,OADAlF,EAASP,SAAWyF,EACblF,KAEJqE,GAIHc,EAAU,SAACJ,EAAQC,GACvB1R,QAAQC,IAAI,wBAAyB2Q,GACrC,IAAMkB,EAAUL,EAAOvE,YACjB6E,EAAgBN,EAAOlH,MACvByH,EAAeN,EAAYnH,MAEjCvK,QAAQC,IAAI,iBAAkBwR,GAC9BzR,QAAQC,IAAI,eAAgByR,GAE5B,IAAMO,EAAarB,EAAOjT,KAAI,SAACuU,GAAD,OAAeA,EAAU1T,MAAI2T,QAAQL,GAC/DM,EAAU,eAAQxB,EAAOqB,IAE7BjS,QAAQC,IAAI,eAAgBmS,GAZW,MAalBA,EAAW1G,MAAM2G,OAAON,EAAe,GAArDd,EAbgC,oBAmBvC,OAJAmB,EAAW1G,MAAM2G,OAAOL,EAAc,EAAGf,GACzCmB,EAAaT,EAAmBS,GAEhCpS,QAAQC,IAAI,cAAemS,GACpB,CAAEA,aAAYH,eAIjBK,EAAW,SAACb,EAAQC,GACxB,IAAMa,EAAc3B,EACjBjT,KAAI,SAACuU,GAAD,OAAeA,EAAU1T,MAC7B2T,QAAQV,EAAOvE,aACZsF,EAAY5B,EACfjT,KAAI,SAACuU,GAAD,OAAeA,EAAU1T,MAC7B2T,QAAQT,EAAYxE,aAEnBuF,EAAY7B,EAAO2B,GACnBG,EAAU9B,EAAO4B,GATmB,EAWrBC,EAAU/G,MAAM2G,OAAOZ,EAAOlH,MAAO,GAAnD0G,EAXmC,oBAcpC0B,EAAcjB,EAAYnH,MAO9B,OANAoI,GAA+B,IAAjBA,EAAqBD,EAAQhH,MAAMtJ,OAASuQ,EAC1DD,EAAQhH,MAAM2G,OAAOM,EAAa,EAAG1B,GAErCyB,EAAUf,EAAmBe,GAGtB,CAAED,UAFTA,EAAYd,EAAmBc,GAEXF,cAAaG,UAASF,cAGtChB,EAAS,uCAAG,WAAOoB,GAAP,qCAAAzQ,EAAA,yDAChBoO,GAAa,GACGkC,EAA8CG,EAAtDnB,OAAgCiB,EAAsBE,EAAnClB,YAAsBjF,EAAamG,EAAbnG,SAC7CzI,EAAU,CAAE4M,OAAQ,IAGnB8B,EANW,uBAOdnC,GAAa,GAPC,6BAaZkC,EAAUvF,cAAgBwF,EAAQxF,YAbtB,oBAcVuF,EAAUlI,QAAUmI,EAAQnI,MAdlB,wBAeZgG,GAAa,GAfD,6BAmBmCsB,EAC/CY,EACAC,GAFgBG,EAnBJ,EAmBRT,WAA4BH,EAnBpB,EAmBoBA,WAKlCjO,EAAQ4M,OAAS,CAACiC,GAElBhC,GAAU,SAACG,GAAD,OACRA,EAAWrT,KAAI,SAACoT,EAAOxG,GAAR,OACbA,IAAU0H,EAAaY,EAAiB9B,QA5B9B,0BAyCVuB,EAASG,EAAWC,GAJXvM,EArCC,EAqCZsM,UACaK,EAtCD,EAsCZP,YACSlS,EAvCG,EAuCZqS,QACWK,EAxCC,EAwCZP,UAEFxO,EAAQ4M,OAAS,CAACzK,EAAM9F,GAExBwQ,GAAU,SAACG,GACT,IAAMgC,EAAS,aAAOhC,GAGtB,OAFAgC,EAAUF,GAAU3M,EACpB6M,EAAUD,GAAQ1S,EACX2S,KAhDK,QAoDhB9B,EAAalN,GAAS,SAACjE,GACrBwQ,GAAa,GACTxQ,EAAOqE,IAAQrE,MAAM,8BAChB0M,GACPA,OAxDY,4CAAH,sDA6DTwG,EACJ,qBACE7V,MAAO,CACLyL,SAAU,QACVrH,UAAW,QACXsH,QAAS,OACTC,eAAgB,SAChBC,WAAY,UANhB,SASE,cAAC,kBAAD,CAAiBxI,MAAM,UAAUlC,KAAM,OAI3C,OAAOkJ,EACLyL,EAEA,cAAC,KAAD,CAAiBzB,UAAWA,EAA5B,SACE,cAAC,IAAD,CACEpU,MAAO,CACLC,gBAAiB,eAFrB,SAKE,eAAC,IAAD,CACED,MAAO,CACLgE,WAAY,EACZE,aAAc,GACdC,YAAa,GACblE,gBAAiB,eALrB,UAQE,cAAC,GAAD,CACED,MAAO,CACLC,gBAAiB,cACjBkE,YAAa,EACbD,aAAc,GAJlB,SAOE,eAAC,IAAD,CAAKX,MAAM,SAAX,UACE,cAAC,IAAD,CAAKc,KAAM,GAAX,SACE,qBAAKwB,UAAU,QAAf,SAAwBuN,EAAchT,SAExC,cAAC,IAAD,CAAKiE,KAAM,GAAX,SACE,cAAC,IAAD,CAAKd,MAAM,MAAMD,QAAQ,SAAzB,SACE,eAAC,KAAD,WACE,cAAC,IAAD,UACG4P,EACC,cAAC4C,GAAA,EAAD,CACEC,MAAI,EACJ/V,MAAO,CAAEoD,MAAO,MAAOD,SAAU,MAGnC,cAAC6S,GAAA,EAAD,CACE7N,aAAa,UACbnI,MAAO,CAAEmD,SAAU,QAIzB,eAAC,IAAD,WACE,cAAC,IAAD,CAAQpC,KAAK,UAAUI,QA5WpB,WACrBoS,GAAqB,IA2WH,yBAGA,cAAC,GAAD,CACErR,QAASoR,EACT5N,QA7WE,WACtB6N,GAAqB,qBAoXf,cAAC,GAAD,UACE,cAAC,IAAD,CAAK5N,OAAQ,CAAC,EAAG,IAAjB,SACG6N,EAAOjT,KAAI,SAACuU,GAAD,OACV,qBAAwB9U,MAAO,CAAEgO,YAAa,GAAIhI,MAAO,KAAzD,SACE,cAAC,GAAD,CACE2D,UAAWmL,EACXxL,QAASA,EACTyD,WAAYyG,KAJNsB,EAAU1T,kB,OCxWrB6U,OA9Df,WAAgB,IAAD,EACyBxU,oBAAS,GADlC,mBACN2I,EADM,KACOC,EADP,OAE2BzI,qBAAWN,GAA3CO,EAFK,EAELA,YAAaC,EAFR,EAEQA,eAwBrB,OAtBA0I,qBAAU,WACR,IAAM0L,EAAmB,uCAAG,sBAAAnR,EAAA,sEACpB3C,IAAM6C,IAAI,UAAU3C,MACxB,SAACC,GAAc,IAAD,EACcA,EAASC,KAA3BC,EADI,EACJA,QAASD,EADL,EACKA,KACjBI,QAAQC,IAAI,MAAON,EAASC,MACxBC,GACFX,EAAe,CAAEf,KAAM,QAASrB,SAAU8C,OAG9C,SAACoI,GACChI,QAAQD,MAAMiI,MAVQ,OAa1BP,GAAe,GAbW,2CAAH,qDAgBpBxI,EAAY2B,iBACf0S,MAED,CAACpU,EAAgBD,EAAY2B,kBAEzB4G,EACL,qBACEpK,MAAO,CACLyL,SAAU,QACVrH,UAAW,QACXsH,QAAS,OACTC,eAAgB,SAChBC,WAAY,UANhB,SASE,cAAC,kBAAD,CAAiBxI,MAAM,UAAUlC,KAAM,OAGzC,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOiV,KAAK,IAAIC,OAAK,EAArB,SACE,cAAC,IAAD,CAAUnT,GAAG,cAEf,cAAC,IAAD,CAAOkT,KAAK,SAASC,OAAK,EAA1B,SACG7N,EAAiB,cAACsK,GAAD,OAEpB,cAAC,IAAD,CAAOsD,KAAK,UAAUC,OAAK,EAA3B,SACG7N,EAAiB,cAACuK,GAAD,OAEpB,cAAC,EAAD,CAAgBsD,OAAK,EAACD,KAAK,UAAUzN,UAAW8H,KAChD,cAAC,EAAD,CACE4F,OAAK,EACLD,KAAK,uBACLzN,UAAWqK,KAEb,cAAC,IAAD,CAAOoD,KAAK,IAAZ,SAAiB5N,EAAiB,cAAC,GAAD,aCtD1C,IAKe8N,GALM,CACnB7S,iBAAiB,EACjB9D,SAAU,ICfN4W,GAAU,SAACxN,EAAOyN,GACtB,OAAQA,EAAOxV,MACb,IAAK,QACH,OCPC,SAAe+H,EAAOyN,GAAS,IAC5B7W,EAAa6W,EAAb7W,SACR,OAAO,2BACFoJ,GADL,IAEEtF,iBAAiB,EACjB9D,SAAUA,IDED4J,CAAcR,EAAOyN,GAE9B,IAAK,SACH,OCDC,SAAgBzN,EAAOyN,GAC5B,OAAO,2BACFzN,GADL,IAEEtF,iBAAiB,IDFR8F,CAAeR,GAExB,IAAK,YACH,OCGC,SAAkBA,EAAOyN,GAAS,IAC/B3M,EAAa2M,EAAb3M,SAER,OADAd,EAAMpJ,SAASmR,OAAOnO,KAAKkH,GACpBd,EDNIQ,CAAiBR,EAAOyN,GAEjC,IAAK,eACH,OCMC,SAAqBzN,EAAOyN,GAAS,IAClC3M,EAAa2M,EAAb3M,SACJ4M,EAAsB1N,EAAMpJ,SAASmR,OAAOtL,QAC9C,SAACnE,GAAD,OAAQA,IAAOwI,KAGjB,OADAd,EAAMpJ,SAASmR,OAAS2F,EACjB1N,EDZIQ,CAAoBR,EAAOyN,GAEpC,QACE,OAAOzN,IAUE2N,GALQ,WAAO,IAAD,EACWC,qBAAWJ,GAASD,IAD/B,mBAE3B,MAAO,CAAExU,YAFkB,KAELC,eAFK,OEbd6U,OAPf,SAA6BlX,GAAQ,IAC3B2H,EAAa3H,EAAb2H,SACR,OACE,cAAC,EAAQwP,SAAT,CAAkBzR,MAAOsR,KAAzB,SAA4CrP,KCDhDyP,IAASlO,OACP,cAAC,IAAMmO,WAAP,UACE,cAAC,GAAD,UACE,cAAC,GAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.2a464892.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\nimport { Avatar, Tooltip, Button } from \"antd\";\nimport { CloseCircleOutlined } from \"@ant-design/icons\";\n\nfunction UserIcon(props) {\n  const { userData, showToolTip, showRemove, onRemove, ...rest } = props;\n\n  const initials = (name) => {\n    if (name) {\n      return name\n        .split(\" \")\n        .slice(0, 2)\n        .map((word) => word.toUpperCase()[0])\n        .join(\"\");\n    }\n  };\n\n  const tooltipTitle = () => {\n    return (\n      <Fragment>\n        {userData.name}\n        {showRemove ? (\n          <Button\n            type=\"text\"\n            icon={<CloseCircleOutlined size=\"large\" />}\n            onClick={() => onRemove(userData.id)}\n          />\n        ) : null}\n      </Fragment>\n    );\n  };\n\n  const renderAvatar = (\n    <Avatar\n      key={props.key}\n      style={{\n        backgroundColor: \"green\",\n        verticalAlign: \"middle\",\n        cursor: \"pointer\",\n      }}\n      {...rest}\n    >\n      {initials(userData.name)}\n    </Avatar>\n  );\n\n  const renderToolTipAvatar = (\n    <Tooltip key={props.key} title={tooltipTitle()} placement=\"top\">\n      {renderAvatar}\n    </Tooltip>\n  );\n\n  return showToolTip ? renderToolTipAvatar : renderAvatar;\n}\n\nexport default UserIcon;\n","import { createContext } from \"react\";\n\nconst Context = createContext({});\n\nexport default Context;\n","import React, { useState, useContext } from \"react\";\nimport { Row, Col, Button, Popover } from \"antd\";\nimport { PoweroffOutlined } from \"@ant-design/icons\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport UserIcon from \"./UserIcon\";\nimport Context from \"../store/context\";\n\nexport default function AppBar() {\n  const [profileInfoVisible, setProfileInfoVisible] = useState(false);\n  const { globalState, globalDispatch } = useContext(Context);\n  const history = useHistory();\n\n  const handleProfileVisibilityChange = (visible) => {\n    setProfileInfoVisible(visible);\n  };\n\n  const handleLogout = () => {\n    axios.post(\"/logout\").then(\n      (response) => {\n        if (response.data.success) {\n          globalDispatch({ type: \"LOGOUT\" });\n          history.push(\"/login\");\n        }\n      },\n      (error) => {\n        console.log(\"error\", error);\n      }\n    );\n  };\n\n  const handleLogin = () => {\n    history.push(\"/login\");\n  };\n\n  const LeftComponent = () => {\n    return null;\n  };\n\n  const CenterComponent = () => {\n    return (\n      <Link to=\"/boards\">\n        <div style={{ textAlign: \"center\", fontSize: 24, color: \"white\" }}>\n          Roster\n        </div>\n      </Link>\n    );\n  };\n\n  const RightComponent = () => {\n    return (\n      <Row justify=\"end\" align=\"middle\">\n        <Col>\n          {globalState.isAuthenticated ? (\n            <Popover\n              placement=\"bottomRight\"\n              content={<ProfileContent />}\n              trigger=\"click\"\n              visible={profileInfoVisible}\n              onVisibleChange={handleProfileVisibilityChange}\n            >\n              <UserIcon userData={globalState.userData} />\n            </Popover>\n          ) : (\n            <Button ghost onClick={handleLogin}>\n              Log In\n            </Button>\n          )}\n        </Col>\n      </Row>\n    );\n  };\n\n  const ProfileContent = () => {\n    return (\n      <Button\n        type=\"text\"\n        icon={<PoweroffOutlined key=\"setting\" />}\n        style={{ padding: 0 }}\n        onClick={handleLogout}\n      >\n        Log out\n      </Button>\n    );\n  };\n\n  return (\n    <header\n      style={{\n        backgroundColor: \"#046994\",\n        paddingTop: 5,\n        paddingBottom: 5,\n        paddingRight: 32,\n        paddingLeft: 32,\n        minHeight: \"5vh\",\n      }}\n    >\n      <Row align=\"middle\">\n        {/* Left component */}\n        <Col span={8}>\n          <LeftComponent />\n        </Col>\n        {/* Center component */}\n        <Col span={8}>\n          <CenterComponent />\n        </Col>\n        {/* Right component */}\n        <Col span={8}>\n          <RightComponent />\n        </Col>\n      </Row>\n    </header>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport {\n  Row,\n  Col,\n  Modal,\n  Input,\n  Button,\n  Avatar,\n  message,\n  AutoComplete,\n} from \"antd\";\nimport axios from \"axios\";\nimport Context from \"../store/context\";\nimport UserIcon from \"./UserIcon\";\nimport \"./CreateBoard.css\";\n\nexport default function CreateBoard(props) {\n  const { globalState } = useContext(Context);\n  const { id, name } = globalState.userData;\n\n  const [boardName, setBoardName] = useState(\"\");\n  const [selectedMembers, setSelectedMembers] = useState([{ id, name }]);\n  const [autocompleteOptions, setAutocompleteOptions] = useState();\n\n  const handleNameChange = (event) => {\n    setBoardName(event.target.value);\n  };\n\n  const handleSearch = async (event) => {\n    // const name = event.target.value;\n    const name = event;\n    if (name.length > 0) {\n      axios.get(`/users/search?q=${name}`).then((response) => {\n        const { data } = response.data;\n        console.log(data);\n        if (data.length) {\n          setAutocompleteOptions(\n            data.map((user) => ({ key: user.id, value: user.name }))\n          );\n        } else {\n          setAutocompleteOptions([]);\n        }\n      });\n    }\n  };\n\n  const handleRemoveMember = (remove_id) => {\n    if (remove_id === globalState.userData.id) return;\n    setSelectedMembers((previousMembers) =>\n      previousMembers.filter((user) => user.id !== remove_id)\n    );\n  };\n\n  const handleSelectSearchedData = (name, options) => {\n    setAutocompleteOptions([]);\n    if (\n      selectedMembers.filter((user) => user.id === options.key).length === 0\n    ) {\n      const newMember = { id: options.key, name: options.value };\n      setSelectedMembers((previousMembers) =>\n        previousMembers.concat([newMember])\n      );\n    }\n  };\n\n  const handleCreatePress = () => {\n    const payload = {\n      name: boardName,\n      members: selectedMembers.map((member) => member.id),\n    };\n\n    const onSuccess = (response) => {\n      const { success, error, data } = response.data;\n\n      if (success) {\n        message.success(`${boardName} created successfully`);\n        props.onCreate(data);\n      } else {\n        console.log(\"HERE\");\n        onError(error);\n      }\n    };\n\n    const onError = (error) => {\n      message.error(`Failed to create board`);\n      console.error(\"POST /boards : \", error);\n    };\n\n    axios\n      .post(\n        \"/boards\",\n        { data: { ...payload } },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      )\n      .then(onSuccess, onError);\n\n    props.onClose();\n  };\n\n  return (\n    <Modal\n      title=\"New Board\"\n      visible={props.visible}\n      footer={null}\n      onCancel={props.onClose}\n    >\n      <Row gutter={[0, 20]}>\n        <Col span={24}>\n          <Input\n            size=\"large\"\n            placeholder=\"Board name\"\n            className=\"rounded\"\n            onChange={handleNameChange}\n            value={boardName}\n          />\n        </Col>\n        <Col span={24}>\n          <AutoComplete\n            style={{ width: \"100%\" }}\n            onSearch={handleSearch}\n            options={autocompleteOptions}\n            onSelect={handleSelectSearchedData}\n          >\n            <Input.Search size=\"large\" placeholder=\"Add members\" enterButton />\n          </AutoComplete>\n        </Col>\n        <Col span={24}>\n          <strong>Members</strong>\n        </Col>\n        <Col span={24}>\n          <Avatar.Group maxCount={5}>\n            {selectedMembers.map((eachMember) => (\n              <UserIcon\n                showToolTip\n                showRemove\n                key={eachMember.id}\n                userData={eachMember}\n                onRemove={handleRemoveMember}\n              />\n            ))}\n          </Avatar.Group>\n        </Col>\n        <Col span={24}>\n          <Button block type=\"primary\" onClick={handleCreatePress}>\n            Create\n          </Button>\n        </Col>\n      </Row>\n    </Modal>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Popconfirm } from \"antd\";\n\nfunction Confirmation({ children, onConfirm }) {\n  const [popconfirmVisible, setPopconfirmVisible] = useState(false);\n\n  const handleVisibleChange = (visible) => {\n    setPopconfirmVisible(visible);\n  };\n\n  const hidePopconfirm = () => {\n    setPopconfirmVisible(false);\n  };\n\n  const handleConfirm = () => {\n    hidePopconfirm();\n    onConfirm();\n  };\n\n  return (\n    <Popconfirm\n      title=\"Are you sure you want to delete this?\"\n      visible={popconfirmVisible}\n      onVisibleChange={handleVisibleChange}\n      onConfirm={handleConfirm}\n      onCancel={hidePopconfirm}\n      okText=\"Yes\"\n      cancelText=\"No\"\n    >\n      {children}\n    </Popconfirm>\n  );\n}\n\nexport default Confirmation;\n","import React from \"react\";\nimport { Card, Avatar, Button } from \"antd\";\nimport { DeleteTwoTone } from \"@ant-design/icons\";\nimport { Link } from \"react-router-dom\";\nimport UserIcon from \"./UserIcon\";\nimport Confirmation from \"./Confirmation\";\nimport \"./Flashcard.css\";\n\nexport default function FlashCard(props) {\n  const { boardData, onDelete } = props;\n  const maxAvatarDisplay = 3;\n  const linkTo = `/${boardData.id}/dashboard`;\n\n  return (\n    <Link to={linkTo}>\n      <Card\n        title={boardData.name}\n        hoverable\n        className=\"flashcard\"\n        style={{ backgroundColor: \"rgba(36, 145, 227, 0.7)\" }}\n        extra={\n          <Confirmation onConfirm={() => onDelete(boardData.id)}>\n            <Button\n              shape=\"circle\"\n              type=\"text\"\n              icon={<DeleteTwoTone twoToneColor=\"black\" />}\n            />\n          </Confirmation>\n        }\n      >\n        <Avatar.Group maxCount={maxAvatarDisplay}>\n          {boardData.members.map((eachMember) => (\n            <UserIcon\n              key={`${boardData.id}_${eachMember.id}`}\n              userData={eachMember}\n              showToolTip\n            />\n          ))}\n        </Avatar.Group>\n      </Card>\n    </Link>\n  );\n}\n","import { Layout } from \"antd\";\nimport AppBar from \"../components/AppBar\";\n\nconst { Content, Header } = Layout;\n\nexport default function withGlobalHeader(children) {\n  return (\n    <Layout\n      style={{\n        backgroundColor: \"transparent\",\n        minHeight: \"100vh\",\n      }}\n    >\n      <AppBar />\n      <Content>{children}</Content>\n    </Layout>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport Context from \"../store/context\";\nimport withGlobalHeader from \"../hoc/withGlobalHeader\";\n\nfunction ProtectedRoute({ component: Component, ...rest }) {\n  const { globalState } = useContext(Context);\n\n  console.log(\"GLOBAL STATE\", globalState);\n\n  return (\n    <Route\n      {...rest}\n      render={(routeProps) => {\n        return globalState.isAuthenticated ? (\n          withGlobalHeader(<Component {...routeProps} />)\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: routeProps.location },\n            }}\n          />\n        );\n      }}\n    />\n  );\n}\n\nexport default ProtectedRoute;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport {\n  Typography,\n  Modal,\n  Avatar,\n  Layout,\n  Button,\n  Divider,\n  Row,\n  Col,\n  message,\n  AutoComplete,\n} from \"antd\";\nimport { PropagateLoader } from \"react-spinners\";\nimport { HighlightOutlined } from \"@ant-design/icons\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport UserIcon from \"./UserIcon\";\nimport Confirmation from \"./Confirmation\";\nimport Context from \"../store/context\";\nimport qs from \"qs\";\n\nconst { Title, Paragraph } = Typography;\nconst { Sider, Header, Content } = Layout;\n\nexport default function TaskDetail(props) {\n  const { methods, updateTasksList } = props;\n  const { id: task_id } = props.itemData;\n  const { id: stage_id } = props.stageData;\n  const { board_id } = useParams();\n  const TASK_DATA_URL = `/${board_id}/dashboard/task?task_id=${task_id}`;\n\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [assigned, setAssigned] = useState([]);\n  const [pageLoading, setPageLoading] = useState(true);\n  const [hasJoined, setHasJoined] = useState(false);\n  const [autocompleteOptions, setAutocompleteOptions] = useState([]);\n  const { globalState } = useContext(Context);\n\n  useEffect(() => {\n    const getTaskDetails = async () => {\n      await axios\n        .get(TASK_DATA_URL)\n        .then(\n          (response) => {\n            const { success, error, data } = response.data;\n            console.log(\"getTaskDetails\", response);\n            if (success) {\n              let alreadyJoined =\n                data.assigned.find(\n                  (user) => user.id === globalState.userData.id\n                ) != null;\n\n              setTitle(data.title);\n              setDescription(data.description);\n              setAssigned(data.assigned);\n              setHasJoined(alreadyJoined);\n            } else {\n              message(\"Couldn't retrive task details\");\n              console.error(error);\n            }\n          },\n          (err) => {\n            console.error(`GET ${TASK_DATA_URL}`, err);\n          }\n        )\n        .finally(() => {\n          setPageLoading(false);\n        });\n    };\n\n    const getMembers = async () => {\n      axios\n        .get(\"/boards/multiple\", {\n          params: { boardIds: JSON.stringify([board_id]) },\n          paramsSerializer: (params) => {\n            return qs.stringify(params);\n          },\n        })\n        .then(\n          (response) => {\n            const { success, error, data } = response.data;\n            console.log(data[0]);\n            if (success) {\n              setAutocompleteOptions(\n                data[0].members.map((user) => ({\n                  key: user.id,\n                  value: user.name,\n                }))\n              );\n            }\n          },\n          (error) => {\n            console.error(error);\n          }\n        );\n    };\n\n    getMembers();\n    getTaskDetails();\n  }, [board_id, task_id]);\n\n  const handleAddAssigned = (name, options) => {\n    let { key: assigned_id } = options;\n\n    if (assigned.filter((user) => user.id === assigned_id).length === 0) {\n      const newlyAssigned = { id: assigned_id, name: name };\n      methods.addAssigned(task_id, assigned_id, () => {\n        setAssigned((previouslyAssigned) =>\n          previouslyAssigned.concat([newlyAssigned])\n        );\n      });\n    }\n  };\n\n  const handleRemoveAssigned = (remove_id) => {\n    methods.removeAssigned(task_id, remove_id, () => {\n      setAssigned((previouslyAssigned) =>\n        previouslyAssigned.filter((user) => user.id !== remove_id)\n      );\n    });\n  };\n\n  const handleJoinTask = () => {\n    methods.joinTask(task_id, () => {\n      setHasJoined(true);\n    });\n  };\n\n  const handleDeleteTask = () => {\n    methods.deleteTask(task_id, stage_id, () => {\n      updateTasksList(task_id, { toUpdate: \"remove\" }, () => {\n        props.handleClose();\n      });\n    });\n  };\n\n  const handleChangeTitle = (newTitle) => {\n    methods.changeTaskTitle(task_id, newTitle, () => {\n      updateTasksList(task_id, { toUpdate: \"title\", newTitle }, () => {\n        setTitle(newTitle);\n      });\n    });\n  };\n\n  const handleChangeDescription = (newDescription) => {\n    methods.changeTaskDescription(task_id, newDescription, () => {\n      setDescription(newDescription);\n    });\n  };\n\n  const handleMoveTask = (to_stage) => {\n    methods.moveTask(task_id, stage_id, to_stage.id, props.index, () => {\n      message.success(`Task moved to ${to_stage.name}`);\n    });\n  };\n\n  const renderPageLoadingScreen = (\n    <div\n      style={{\n        minWidth: \"100hw\",\n        minHeight: \"100vh\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <PropagateLoader color=\"#1890ff\" size={30} />\n    </div>\n  );\n\n  return (\n    <Modal\n      visible={props.visible}\n      footer={null}\n      onCancel={props.handleClose}\n      width=\"45vw\"\n      style={{ minWidth: 450 }}\n    >\n      {pageLoading ? (\n        renderPageLoadingScreen\n      ) : (\n        <Layout style={{ backgroundColor: \"transparent\" }}>\n          <Header\n            style={{\n              backgroundColor: \"transparent\",\n              paddingLeft: 0,\n            }}\n          >\n            <Title\n              level={4}\n              editable={{\n                icon: <HighlightOutlined />,\n                tooltip: \"Edit title\",\n                onChange: handleChangeTitle,\n              }}\n            >\n              {title}\n            </Title>\n          </Header>\n          <Content>\n            <Layout style={{ backgroundColor: \"transparent\" }}>\n              <Content style={{ paddingRight: 20 }}>\n                <Title level={5}>Description</Title>\n                <Paragraph\n                  editable={{\n                    icon: <HighlightOutlined />,\n                    tooltip: \"Edit description\",\n                    onChange: handleChangeDescription,\n                  }}\n                >\n                  {description}\n                </Paragraph>\n                <Title level={5}>Assigned</Title>\n                <Row>\n                  <AutoComplete\n                    style={{ width: \"100%\" }}\n                    placeholder=\"Add members to assign\"\n                    options={autocompleteOptions}\n                    onSelect={handleAddAssigned}\n                  ></AutoComplete>\n                </Row>\n                <Row>\n                  <Avatar.Group maxCount={5} style={{ marginTop: 10 }}>\n                    {assigned.map((eachMember) => (\n                      <UserIcon\n                        key={`${task_id}_${eachMember.id}`}\n                        userData={eachMember}\n                        showToolTip\n                        showRemove\n                        onRemove={handleRemoveAssigned}\n                      />\n                    ))}\n                  </Avatar.Group>\n                </Row>\n              </Content>\n              <Sider style={{ backgroundColor: \"transparent\" }}>\n                <Row>\n                  <Col span={12}>\n                    <Button\n                      onClick={handleJoinTask}\n                      type=\"primary\"\n                      disabled={hasJoined}\n                      style={{ width: \"100%\" }}\n                    >\n                      {hasJoined ? \"Joined\" : \"Join Task\"}\n                    </Button>\n                  </Col>\n                  <Col span={12}>\n                    <Confirmation onConfirm={handleDeleteTask}>\n                      <Button\n                        type=\"dashed\"\n                        color=\"red\"\n                        style={{ width: \"100%\" }}\n                      >\n                        Delete Task\n                      </Button>\n                    </Confirmation>\n                  </Col>\n                </Row>\n                <Divider />\n                <Paragraph strong>Move to</Paragraph>\n                <Row gutter={[0, 6]}>\n                  {props.stagesList.map((join_stage) => {\n                    return (\n                      join_stage.id !== stage_id && (\n                        <Col key={join_stage.id} span={24}>\n                          <Button\n                            block\n                            type=\"dashed\"\n                            onClick={() => handleMoveTask(join_stage)}\n                          >\n                            {join_stage.name}\n                          </Button>\n                        </Col>\n                      )\n                    );\n                  })}\n                </Row>\n              </Sider>\n            </Layout>\n          </Content>\n        </Layout>\n      )}\n    </Modal>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport TaskDetail from \"./TaskDetail\";\n\nexport default function TaskItem(props) {\n  const { itemData, index } = props;\n  const [taskDetailVisible, setTaskDetailVisible] = useState(false);\n\n  const handleTaskDetailOpen = () => {\n    setTaskDetailVisible(true);\n  };\n\n  const handleTaskDetailClose = () => {\n    setTaskDetailVisible(false);\n  };\n\n  if (itemData) {\n    return (\n      <Draggable draggableId={itemData.id} index={index}>\n        {(provided) => (\n          <div\n            ref={provided.innerRef}\n            {...provided.dragHandleProps}\n            {...provided.draggableProps}\n          >\n            <div\n              style={{\n                backgroundColor: \"white\",\n                marginLeft: 6,\n                marginRight: 6,\n                marginBottom: 5,\n                marginTop: 4,\n                paddingTop: 5,\n                paddingBottom: 5,\n                paddingLeft: 10,\n                borderRadius: 4,\n                boxShadow: \"0px 2px 0px rgba(0,0,0,0.1)\",\n                cursor: \"pointer\",\n              }}\n              onClick={handleTaskDetailOpen}\n            >\n              {itemData.title}\n            </div>\n            <TaskDetail\n              visible={taskDetailVisible}\n              handleClose={handleTaskDetailClose}\n              {...props}\n            />\n          </div>\n        )}\n      </Draggable>\n    );\n  } else {\n    return null;\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Row, Col, Button, Input, message } from \"antd\";\nimport { PlusOutlined, CloseOutlined } from \"@ant-design/icons\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport TaskItem from \"./TaskItem\";\n\nexport default function TaskList(props) {\n  const { methods, stageData } = props;\n  let { ...stageMeta } = stageData;\n\n  const [tasks, setTasks] = useState([]);\n  const [addCardVisible, setAddCardVisible] = useState(false);\n  const [title, setTitle] = useState(\"\");\n\n  useEffect(() => {\n    console.log(\"got stageData\", stageData);\n    let tasksCopy = Array.from(stageData.tasks);\n    tasksCopy.sort((task1, task2) => task1.position - task2.position);\n    setTasks(tasksCopy);\n  }, [stageData.tasks]);\n\n  const handleAddCard = async () => {\n    if (title.length > 0) {\n      await methods.addTask(stageMeta.id, title, (newTask, error) => {\n        if (error) {\n          message.error(`Failed to create task`);\n        } else {\n          updateTasksList(newTask.id, { toUpdate: \"add\", newTask });\n        }\n        handleCloseAddCard();\n      });\n    }\n  };\n\n  const handleOpenAddCard = () => {\n    setAddCardVisible(true);\n  };\n\n  const handleCloseAddCard = () => {\n    setTitle(\"\");\n    setAddCardVisible(false);\n  };\n\n  const handleTitleChange = (event) => {\n    setTitle(event.target.value);\n  };\n\n  const updateTasksList = (task_id, updateDetails, callback) => {\n    const { toUpdate, newTitle, newTask } = updateDetails;\n\n    console.log(\"updateTasksList....\");\n\n    switch (toUpdate) {\n      case \"title\": {\n        console.log(\"setting title...\");\n        setTasks(\n          [...tasks].map((eachTask) => {\n            if (eachTask.id === task_id)\n              return {\n                ...eachTask,\n                title: newTitle,\n              };\n            else return eachTask;\n          })\n        );\n        break;\n      }\n\n      case \"add\": {\n        console.log(\"adding task...\");\n        newTask.position = tasks.length;\n        setTasks((prevTasks) => prevTasks.concat(newTask));\n        break;\n      }\n\n      case \"remove\": {\n        console.log(\"removing task...\");\n        setTasks((prevTasks) =>\n          prevTasks.filter((task) => task.id !== task_id)\n        );\n        break;\n      }\n\n      default: {\n        console.log(\"nothing to update...\");\n      }\n    }\n\n    if (callback) {\n      console.log(\"callback...\");\n      callback();\n    }\n  };\n\n  const listHeader = (\n    <Row\n      justify=\"space-between\"\n      style={{\n        width: \"100%\",\n        paddingTop: 5,\n        paddingBottom: 5,\n        paddingLeft: 20,\n        paddingRight: 10,\n      }}\n    >\n      <Col>\n        <strong>{stageMeta.name}</strong>\n      </Col>\n    </Row>\n  );\n\n  const listFooter = (\n    <div\n      style={{\n        width: \"100%\",\n        paddingBottom: 5,\n        paddingTop: 5,\n        marginLeft: 6,\n        marginRight: 6,\n        marginBottom: 5,\n        marginTop: 4,\n      }}\n    >\n      {addCardVisible ? (\n        <>\n          <Input\n            style={{\n              backgroundColor: \"white\",\n              paddingTop: 5,\n              paddingBottom: 5,\n              paddingLeft: 10,\n              borderRadius: 4,\n              marginBottom: 10,\n              boxShadow: \"0px 2px 0px rgba(0,0,0,0.1)\",\n              cursor: \"text\",\n            }}\n            placeholder=\"Enter a title for this card...\"\n            onPressEnter={handleAddCard}\n            onChange={handleTitleChange}\n          />\n          <Button\n            style={{\n              backgroundColor: \"green\",\n              color: \"white\",\n              borderRadius: 5,\n            }}\n            onClick={handleAddCard}\n          >\n            Add Card\n          </Button>\n          <Button\n            type=\"text\"\n            icon={<CloseOutlined />}\n            onClick={handleCloseAddCard}\n          />\n        </>\n      ) : (\n        <Button type=\"text\" icon={<PlusOutlined />} onClick={handleOpenAddCard}>\n          Add another card\n        </Button>\n      )}\n    </div>\n  );\n\n  return (\n    <Row\n      style={{\n        backgroundColor: \"rgba(36, 145, 227, 0.5)\",\n        borderRadius: 5,\n      }}\n    >\n      {listHeader}\n      <Droppable droppableId={stageMeta.id}>\n        {(provided) => (\n          <div\n            ref={provided.innerRef}\n            {...provided.droppableProps}\n            style={{ width: \"100%\" }}\n          >\n            {tasks.map(\n              (eachCard, index) =>\n                eachCard && (\n                  <Col key={eachCard.id} span={24}>\n                    <TaskItem\n                      key={eachCard.id}\n                      itemData={eachCard}\n                      index={index}\n                      updateTasksList={updateTasksList}\n                      {...props}\n                    />\n                  </Col>\n                )\n            )}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n      {listFooter}\n    </Row>\n  );\n}\n","import React from \"react\";\nimport { PropagateLoader } from \"react-spinners\";\n\nfunction LoadingScreen({ loading, children }) {\n  <div\n    style={{\n      minWidth: \"100hw\",\n      minHeight: \"100vh\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    }}\n  >\n    loading ?\n    <PropagateLoader color=\"#1890ff\" size={30} />: {children}\n  </div>;\n}\n\nexport default LoadingScreen;\n","import React from \"react\";\nimport { Result, Button } from \"antd\";\nimport { Link } from \"react-router-dom\";\n\nfunction NotFoundPage(props) {\n  return (\n    <Result\n      status=\"404\"\n      title=\"404\"\n      subTitle=\"Sorry, the page you're looking for does not exist.\"\n      extra={\n        <Link to=\"/boards\">\n          <Button type=\"primary\">Back Home</Button>\n        </Link>\n      }\n    />\n  );\n}\n\nexport default NotFoundPage;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport {\n  Row,\n  Col,\n  Modal,\n  Input,\n  Button,\n  Avatar,\n  message,\n  AutoComplete,\n} from \"antd\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Context from \"../store/context\";\nimport UserIcon from \"./UserIcon\";\nimport qs from \"qs\";\n\nfunction AddMembers(props) {\n  const { board_id } = useParams();\n  const { globalState } = useContext(Context);\n\n  const [selectedMembers, setSelectedMembers] = useState([]);\n  const [autocompleteOptions, setAutocompleteOptions] = useState();\n\n  useEffect(() => {\n    const getMembers = async () => {\n      const onError = (error) => {\n        console.error(error);\n        props.onClose();\n      };\n\n      axios\n        .get(\"/boards/multiple\", {\n          params: { boardIds: JSON.stringify([board_id]) },\n          paramsSerializer: (params) => {\n            return qs.stringify(params);\n          },\n        })\n        .then(\n          (response) => {\n            const { success, error, data } = response.data;\n            let currentBoard = data == null ? null : data[0];\n            if (success && currentBoard) {\n              setSelectedMembers(data[0].members);\n            } else {\n              onError(error);\n            }\n          },\n          (error) => {\n            onError(error);\n          }\n        );\n    };\n\n    getMembers();\n  }, []);\n\n  const handleSearch = async (event) => {\n    // const name = event.target.value;\n    const name = event;\n    if (name.length > 0) {\n      axios.get(`/users/search?q=${name}`).then((response) => {\n        const { data } = response.data;\n        console.log(data);\n        if (data.length) {\n          setAutocompleteOptions(\n            data.map((user) => ({ key: user.id, value: user.name }))\n          );\n        } else {\n          setAutocompleteOptions([]);\n        }\n      });\n    }\n  };\n\n  const handleRemoveMember = (remove_id) => {\n    if (remove_id === globalState.userData.id) return;\n    setSelectedMembers((previousMembers) =>\n      previousMembers.filter((user) => user.id !== remove_id)\n    );\n  };\n\n  const handleSelectSearchedData = (name, options) => {\n    setAutocompleteOptions([]);\n    if (\n      selectedMembers.filter((user) => user.id === options.key).length === 0\n    ) {\n      const newMember = { id: options.key, name: options.value };\n      setSelectedMembers((previousMembers) =>\n        previousMembers.concat([newMember])\n      );\n    }\n  };\n\n  const updateMembersList = () => {\n    let payload = {\n      board_id,\n      members: selectedMembers.map((member) => member.id),\n    };\n    axios.put(\"/boards\", payload).then(\n      (response) => {\n        const { success, data, error } = response.data;\n        if (success) {\n          console.log(data);\n          message.success(\"Successfully updated members\");\n        } else {\n          message.error(\"Failed to update members\");\n          console.error(error);\n        }\n      },\n      (error) => {\n        message.error(\"Failed to update members\");\n        console.error(error);\n      }\n    );\n  };\n\n  return (\n    <Modal\n      title=\"Add members\"\n      visible={props.visible}\n      footer={null}\n      onCancel={props.onClose}\n    >\n      <Row gutter={[0, 20]}>\n        <Col span={24}>\n          <AutoComplete\n            style={{ width: \"100%\" }}\n            onSearch={handleSearch}\n            options={autocompleteOptions}\n            onSelect={handleSelectSearchedData}\n          >\n            <Input.Search size=\"large\" placeholder=\"Add members\" enterButton />\n          </AutoComplete>\n        </Col>\n        <Col span={24}>\n          <strong>Members</strong>\n        </Col>\n        <Col span={24}>\n          <Avatar.Group maxCount={5}>\n            {selectedMembers.map((eachMember) => (\n              <UserIcon\n                showToolTip\n                showRemove\n                key={eachMember.id}\n                userData={eachMember}\n                onRemove={handleRemoveMember}\n              />\n            ))}\n          </Avatar.Group>\n        </Col>\n        <Col span={24}>\n          <Button block type=\"primary\" onClick={updateMembersList}>\n            Update\n          </Button>\n        </Col>\n      </Row>\n    </Modal>\n  );\n}\n\nexport default AddMembers;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { Layout, Button, Row, Col, Typography, message } from \"antd\";\nimport axios from \"axios\";\nimport qs from \"qs\";\nimport { FlashCard, CreateBoard } from \"../components\";\nimport Context from \"../store/context\";\nimport \"./Boards.css\";\n\nconst { Header, Content } = Layout;\n\nexport default function Boards(props) {\n  const [pageLoading, setPageLoading] = useState(true);\n  const [createBoardVisible, setCreateBoardVisible] = useState(false);\n  const [boardsList, setBoardsList] = useState([]);\n  const { globalState, globalDispatch } = useContext(Context);\n\n  useEffect(() => {\n    const getBoards = async () => {\n      const boardIds = globalState.userData.boards;\n\n      if (boardIds.length) {\n        axios\n          .get(\"/boards/multiple\", {\n            params: { boardIds: JSON.stringify(boardIds) },\n            paramsSerializer: (params) => {\n              return qs.stringify(params);\n            },\n          })\n          .then(\n            (response) => {\n              const { success, error, data } = response.data;\n              if (success) {\n                console.log(\"--------------BOARD DATA--------------\");\n                console.log(data);\n                setBoardsList(data);\n              } else {\n                console.log(error);\n              }\n            },\n            (err) => {\n              console.error(\"GET /boards/multiple\", err);\n            }\n          );\n      }\n\n      setPageLoading(false);\n    };\n\n    getBoards();\n  }, []);\n\n  const handleCreateBoardPress = () => {\n    setCreateBoardVisible(true);\n  };\n\n  const handleCreateBoardClose = () => {\n    setCreateBoardVisible(false);\n  };\n\n  const handleDeleteBoard = (board_id) => {\n    console.log(\"DELETE board_id\", board_id);\n\n    axios\n      .delete(\"/boards\", { params: { board_id } })\n      .then(\n        (response) => {\n          if (response.data.success) {\n            setBoardsList((prevBoardIds) => {\n              globalDispatch({ type: \"BOARD_DELETE\", board_id: board_id });\n              let newBoardIds = prevBoardIds\n                .filter((eachBoard) => eachBoard.id !== board_id)\n                .map((board) => board.id);\n              return newBoardIds;\n            });\n            message.success(\"Board deleted successfully\");\n          } else {\n            throw new Error(response.data.error);\n          }\n        },\n        (error) => {\n          throw new Error(error);\n        }\n      )\n      .catch((e) => {\n        message.error(`Failed to delete board`);\n        console.error(\"DELETE /boards : \", e);\n      });\n  };\n\n  const handleAddNewBoard = (board_data) => {\n    setBoardsList((prevBoardList) => {\n      globalDispatch({ type: \"BOARD_ADD\", board_id: board_data.id });\n      return prevBoardList.concat(board_data);\n    });\n  };\n\n  return (\n    <Layout\n      className=\"transparent-bg padding fullscreen\"\n      style={{\n        backgroundColor: \"transparent\",\n      }}\n    >\n      <Header\n        className=\"transparent-bg header\"\n        style={{\n          backgroundColor: \"transparent\",\n          paddingLeft: 0,\n          paddingRight: 0,\n        }}\n      >\n        <Row justify=\"space-between\" align=\"middle\">\n          <div className=\"title\">Boards</div>\n          <Button type=\"primary\" onClick={handleCreateBoardPress}>\n            Create Board\n          </Button>\n        </Row>\n      </Header>\n      <Content>\n        {boardsList.length ? (\n          <Row gutter={[40, 40]}>\n            {boardsList.map((eachBoard) => (\n              <Col key={eachBoard.id} span={8}>\n                <FlashCard boardData={eachBoard} onDelete={handleDeleteBoard} />\n              </Col>\n            ))}\n          </Row>\n        ) : (\n          <Typography.Text type=\"secondary\">\n            No boards created yet\n          </Typography.Text>\n        )}\n      </Content>\n      <CreateBoard\n        visible={createBoardVisible}\n        onClose={handleCreateBoardClose}\n        onCreate={handleAddNewBoard}\n      />\n    </Layout>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Form, Input, Button, Typography, Row, Col, message } from \"antd\";\nimport { MailOutlined, LockOutlined, UserOutlined } from \"@ant-design/icons\";\nimport Context from \"../store/context\";\nimport axios from \"axios\";\nimport \"./Forms.css\";\n\nexport default function Forms(props) {\n  const { formType, formTitle, url, footer } = props;\n  const history = useHistory();\n  const { globalState, globalDispatch } = useContext(Context);\n\n  if (globalState.isAuthenticated) {\n    history.replace(\"/boards\");\n  }\n\n  const handleFormSubmit = (payload) => {\n    axios\n      .post(url, payload, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then(\n        (response) => {\n          const { success, error, data } = response.data;\n          if (success) {\n            globalDispatch({ type: \"LOGIN\", userData: data });\n            history.push(\"/boards\");\n          } else {\n            message.error(`Failed to ${formType}`);\n            console.error(error);\n          }\n        },\n        (err) => {\n          message.error(`Failed to ${formType}`);\n          console.error(err);\n        }\n      );\n  };\n\n  return (\n    <div className=\"main\">\n      <div className=\"box\" bordered={false}>\n        <Form\n          name=\"normal_login\"\n          className=\"login-form\"\n          initialValues={{\n            remember: true,\n          }}\n          onFinish={handleFormSubmit}\n        >\n          <Typography.Title\n            style={{ color: \"rgba(0,0,0,0.8)\", textAlign: \"center\" }}\n            level={2}\n          >\n            {formTitle}\n          </Typography.Title>\n          {formType === \"signup\" && (\n            <Form.Item\n              name=\"name\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Name can't be empty\",\n                },\n              ]}\n            >\n              <Input\n                prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                placeholder=\"Name\"\n                size=\"large\"\n                allowClear\n                className=\"rounded\"\n              />\n            </Form.Item>\n          )}\n          <Form.Item\n            name=\"email\"\n            rules={[\n              {\n                required: true,\n                type: \"email\",\n                message: \"Please enter valid email\",\n              },\n            ]}\n          >\n            <Input\n              prefix={<MailOutlined />}\n              placeholder=\"Email\"\n              size=\"large\"\n              allowClear\n              className=\"rounded\"\n            />\n          </Form.Item>\n          <Form.Item\n            name=\"password\"\n            rules={[\n              {\n                required: true,\n                message: \"Password can't be empty\",\n              },\n            ]}\n          >\n            <Input.Password\n              prefix={<LockOutlined />}\n              placeholder=\"Password\"\n              size=\"large\"\n              allowClear\n              className=\"rounded\"\n            />\n          </Form.Item>\n          <Row gutter={[0, 10]}>\n            <Col span={24}>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                className=\"login-form-button\"\n                shape=\"round\"\n              >\n                {formType === \"login\" ? \"Log in\" : \"Register\"}\n              </Button>\n            </Col>\n            {footer && <Col span={24}>{footer}</Col>}\n          </Row>\n        </Form>\n      </div>\n    </div>\n  );\n}\n","import { Link } from \"react-router-dom\";\nimport Forms from \"../components/Forms\";\n\nexport default function Login(props) {\n  return (\n    <Forms\n      formType=\"login\"\n      url=\"/login\"\n      formTitle=\"Login\"\n      footer={\n        <>\n          No accounts yet ?{\" \"}\n          <strong>\n            <Link to=\"/signup\">Register now !</Link>\n          </strong>\n        </>\n      }\n    />\n  );\n}\n","import { Link } from \"react-router-dom\";\nimport Forms from \"../components/Forms\";\n\nexport default function Signup(props) {\n  return (\n    <Forms\n      formType=\"signup\"\n      url=\"/signup\"\n      formTitle=\"Signup\"\n      footer={\n        <>\n          Already have an account ?{\" \"}\n          <strong>\n            <Link to=\"/login\">Login here</Link>\n          </strong>\n        </>\n      }\n    />\n  );\n}\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Layout, Row, Col, Button, Space, message } from \"antd\";\nimport { SyncOutlined, CheckCircleTwoTone } from \"@ant-design/icons\";\nimport { PropagateLoader } from \"react-spinners\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { TasksList, AddMembers } from \"../components\";\nimport Context from \"../store/context\";\nimport \"./Boards.css\";\n\nconst { Header, Content } = Layout;\n\nexport default function Dashboard(props) {\n  const { board_id } = useParams();\n  const BASE_URL = `/${board_id}/dashboard`;\n  const TASK_URL = `${BASE_URL}/task`;\n\n  const [uploading, setUploading] = useState(false);\n  const [pageLoading, setPageLoading] = useState(true);\n  const [dashboardData, setDashboardData] = useState({});\n  const [addMembersVisible, setAddMembersVisible] = useState(false);\n  const [stages, setStages] = useState([]);\n  const { globalState } = useContext(Context);\n  const history = useHistory();\n\n  console.log(\"STAGE DASHBOARD\", stages);\n\n  useEffect(() => {\n    const getAllStages = async () => {\n      axios.get(BASE_URL).then(\n        (response) => {\n          const { success, error, data } = response.data;\n          if (success) {\n            const { stages, ...rest } = data;\n            console.log(\"--------------DASHBOARD DATA--------------\");\n            console.log(data);\n            setDashboardData(rest);\n            setStages(stages);\n          } else {\n            history.push(\"/404\");\n            console.error(error);\n          }\n        },\n        (err) => {\n          history.push(\"/boards\");\n          console.error(`GET /${board_id}/dashboard/`, err);\n        }\n      );\n\n      setPageLoading(false);\n    };\n\n    getAllStages();\n  }, [board_id]);\n\n  const openAddMembers = () => {\n    setAddMembersVisible(true);\n  };\n\n  const closeAddMembers = () => {\n    setAddMembersVisible(false);\n  };\n\n  const addTask = async (stage_id, title, callback) => {\n    setUploading(true);\n    let position = stages.filter((stage) => stage.id === stage_id)[0].tasks\n      .length;\n    let payload = {\n      stage_id: stage_id,\n      title: title,\n      position: position,\n    };\n    console.log(\"PAYLOAD\", payload);\n\n    console.log(\"addTask request starting....\");\n    await axios\n      .post(TASK_URL, payload)\n      .then(\n        (response) => {\n          console.log(\"got some response at line 82....\", response.data);\n          const { success, error, data } = response.data;\n\n          if (success) {\n            let newTask = { ...data, position: position };\n            setStages((prevStages) =>\n              prevStages.map((stage) => {\n                if (stage.id === stage_id) {\n                  return {\n                    ...stage,\n                    tasks: stage.tasks.concat(newTask),\n                  };\n                } else return stage;\n              })\n            );\n            callback(data, error);\n          }\n        },\n        (error) => {\n          console.log(\"got error at line 86....\", error);\n          callback(null, error);\n        }\n      )\n      .finally(() => {\n        console.log(\"setUploading to false....\");\n        setUploading(false);\n      });\n  };\n\n  const deleteTask = async (task_id, stage_id, callback) => {\n    setUploading(true);\n    let payload = { task_id: task_id, stage_id: stage_id };\n    axios\n      .delete(TASK_URL, { data: payload })\n      .then(\n        (response) => {\n          const { success, error, data } = response.data;\n\n          if (success) {\n            setStages((prevStages) =>\n              prevStages.map((stage) => {\n                if (stage.id === stage_id) {\n                  return {\n                    ...stage,\n                    tasks: stage.tasks.filter(\n                      (eachTask) => eachTask.id !== task_id\n                    ),\n                  };\n                } else return stage;\n              })\n            );\n            callback(data, error);\n          }\n        },\n        (error) => {\n          callback(null, error);\n        }\n      )\n      .finally(() => {\n        console.log(\"deleted task....\");\n        setUploading(false);\n      });\n  };\n\n  const updateTask = async (payload, callback) => {\n    setUploading(true);\n    console.log(\"updateTask line 105\");\n    axios\n      .put(TASK_URL, payload)\n      .then(\n        (response) => {\n          const { error, success } = response.data;\n          console.log(\"FINAL RESPONSE\", response.data);\n          if (success) return callback();\n          return callback(error);\n        },\n        (error) => {\n          return callback(error);\n        }\n      )\n      .finally(() => {\n        console.log(\"updated task....\");\n        setUploading(false);\n      });\n  };\n\n  const updateStages = async (payload, callback) => {\n    console.log(\"updateStages PAYLOAD\", payload);\n    axios.put(BASE_URL, payload).then(\n      (response) => {\n        const { error, success } = response.data;\n        if (success) return callback();\n        return callback(error);\n      },\n      (error) => {\n        return callback(error);\n      }\n    );\n  };\n\n  const changeAssigned = async (\n    task_id,\n    assigned_id,\n    assignedType,\n    callback\n  ) => {\n    let payload = { task_id, assigned_id, assignedType };\n    updateTask(payload, callback);\n  };\n\n  const addAssigned = (task_id, assigned_id, callback) => {\n    changeAssigned(task_id, assigned_id, \"ADD\", callback);\n  };\n\n  const joinTask = (task_id, callback) => {\n    addAssigned(task_id, globalState.userData.id, callback);\n  };\n\n  const removeAssigned = (task_id, assigned_id, callback) => {\n    changeAssigned(task_id, assigned_id, \"DELETE\", callback);\n  };\n\n  const moveTask = (\n    task_id,\n    from_stage_id,\n    to_stage_id,\n    current_stage_index,\n    callback\n  ) => {\n    let result = {\n      source: { droppableId: from_stage_id, index: current_stage_index },\n      destination: { droppableId: to_stage_id, index: -1 },\n      callback: callback,\n    };\n    onDragEnd(result);\n  };\n\n  const changeTaskTitle = (task_id, title, callback) => {\n    let payload = { task_id, title };\n    console.log(\"changeTaskTitle line: 170\");\n    updateTask(payload, callback);\n  };\n\n  const changeTaskDescription = (task_id, description, callback) => {\n    let payload = { task_id, description };\n    updateTask(payload, callback);\n  };\n\n  // methods exposed to the children to ask parent for backend uploads\n  const methods = {\n    addTask,\n    deleteTask,\n    joinTask,\n    addAssigned,\n    removeAssigned,\n    moveTask,\n    changeTaskTitle,\n    changeTaskDescription,\n    updateStages,\n  };\n\n  // resets the position attribute tasks after each drag and drop\n  const resetTasksPosition = (stage) => {\n    stage.tasks = stage.tasks\n      .filter((eachTask) => eachTask != null)\n      .map((eachTask, newPosition) => {\n        eachTask.position = newPosition;\n        return eachTask;\n      });\n    return stage;\n  };\n\n  // called when task is moved in the same stage itself\n  const reorder = (source, destination) => {\n    console.log(\"BEFORE REORDER stages\", stages);\n    const stageId = source.droppableId;\n    const prevTaskIndex = source.index;\n    const newTaskIndex = destination.index;\n\n    console.log(\"REORDER SOURCE\", source);\n    console.log(\"REORDER DEST\", destination);\n\n    const stageIndex = stages.map((eachStage) => eachStage.id).indexOf(stageId);\n    let foundStage = { ...stages[stageIndex] };\n\n    console.log(\"BEFORE STAGE\", foundStage);\n    const [updateTask] = foundStage.tasks.splice(prevTaskIndex, 1);\n\n    foundStage.tasks.splice(newTaskIndex, 0, updateTask);\n    foundStage = resetTasksPosition(foundStage);\n\n    console.log(\"AFTER STAGE\", foundStage);\n    return { foundStage, stageIndex };\n  };\n\n  // called when task is transferred from one stage to other\n  const transfer = (source, destination) => {\n    const fromStageId = stages\n      .map((eachStage) => eachStage.id)\n      .indexOf(source.droppableId);\n    const toStageId = stages\n      .map((eachStage) => eachStage.id)\n      .indexOf(destination.droppableId);\n\n    let fromStage = stages[fromStageId];\n    let toStage = stages[toStageId];\n\n    let [updateTask] = fromStage.tasks.splice(source.index, 1);\n\n    // note that if destination index is \"-1\", means place at the end\n    let final_index = destination.index;\n    final_index = final_index === -1 ? toStage.tasks.length : final_index;\n    toStage.tasks.splice(final_index, 0, updateTask);\n\n    toStage = resetTasksPosition(toStage);\n    fromStage = resetTasksPosition(fromStage);\n\n    return { fromStage, fromStageId, toStage, toStageId };\n  };\n\n  const onDragEnd = async (result) => {\n    setUploading(true);\n    const { source: fromStage, destination: toStage, callback } = result;\n    let payload = { stages: [] };\n\n    // dropped outside, ignore it\n    if (!toStage) {\n      setUploading(false);\n      return;\n    }\n\n    // ids are same, means drag and drop in same stage, update\n    // the stage only if index of the task has changed\n    if (fromStage.droppableId === toStage.droppableId) {\n      if (fromStage.index === toStage.index) {\n        setUploading(false);\n        return;\n      }\n\n      let { foundStage: reorderedStage, stageIndex } = reorder(\n        fromStage,\n        toStage\n      );\n\n      payload.stages = [reorderedStage];\n\n      setStages((prevStages) =>\n        prevStages.map((stage, index) =>\n          index === stageIndex ? reorderedStage : stage\n        )\n      );\n    }\n\n    // otherwise task is dragged between stages, the payload\n    // will contain both the stages re-arranged\n    else {\n      const {\n        fromStage: from,\n        fromStageId: fromId,\n        toStage: to,\n        toStageId: toId,\n      } = transfer(fromStage, toStage);\n      payload.stages = [from, to];\n\n      setStages((prevStages) => {\n        const newStages = [...prevStages];\n        newStages[fromId] = from;\n        newStages[toId] = to;\n        return newStages;\n      });\n    }\n\n    updateStages(payload, (error) => {\n      setUploading(false);\n      if (error) message.error(\"Failed to update dashboard\");\n      else if (callback) {\n        callback();\n      }\n    });\n  };\n\n  const pageLoadingScreen = (\n    <div\n      style={{\n        minWidth: \"100hw\",\n        minHeight: \"100vh\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <PropagateLoader color=\"#1890ff\" size={30} />\n    </div>\n  );\n\n  return pageLoading ? (\n    pageLoadingScreen\n  ) : (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Layout\n        style={{\n          backgroundColor: \"transparent\",\n        }}\n      >\n        <Layout\n          style={{\n            paddingTop: 0,\n            paddingRight: 32,\n            paddingLeft: 32,\n            backgroundColor: \"transparent\",\n          }}\n        >\n          <Header\n            style={{\n              backgroundColor: \"transparent\",\n              paddingLeft: 0,\n              paddingRight: 0,\n            }}\n          >\n            <Row align=\"middle\">\n              <Col span={12}>\n                <div className=\"title\">{dashboardData.name}</div>\n              </Col>\n              <Col span={12}>\n                <Row align=\"end\" justify=\"middle\">\n                  <Space>\n                    <Col>\n                      {uploading ? (\n                        <SyncOutlined\n                          spin\n                          style={{ color: \"red\", fontSize: 20 }}\n                        />\n                      ) : (\n                        <CheckCircleTwoTone\n                          twoToneColor=\"#52c41a\"\n                          style={{ fontSize: 20 }}\n                        />\n                      )}\n                    </Col>\n                    <Col>\n                      <Button type=\"primary\" onClick={openAddMembers}>\n                        Add members\n                      </Button>\n                      <AddMembers\n                        visible={addMembersVisible}\n                        onClose={closeAddMembers}\n                      />\n                    </Col>\n                  </Space>\n                </Row>\n              </Col>\n            </Row>\n          </Header>\n          <Content>\n            <Row gutter={[0, 12]}>\n              {stages.map((eachStage) => (\n                <div key={eachStage.id} style={{ marginRight: 10, width: 250 }}>\n                  <TasksList\n                    stageData={eachStage}\n                    methods={methods}\n                    stagesList={stages}\n                  />\n                </div>\n              ))}\n            </Row>\n          </Content>\n        </Layout>\n      </Layout>\n    </DragDropContext>\n  );\n}\n","import React, { useEffect, useContext, useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport axios from \"axios\";\nimport { PropagateLoader } from \"react-spinners\";\nimport { Boards, Login, Signup, Dashboard } from \"./views\";\nimport { NotFoundPage, ProtectedRoute } from \"./components\";\nimport withGlobalHeader from \"./hoc/withGlobalHeader\";\nimport Context from \"./store/context\";\nimport \"antd/dist/antd.css\";\n\nfunction App() {\n  const [pageLoading, setPageLoading] = useState(true);\n  const { globalState, globalDispatch } = useContext(Context);\n\n  useEffect(() => {\n    const verifyExistingToken = async () => {\n      await axios.get(\"/login\").then(\n        (response) => {\n          const { success, data } = response.data;\n          console.log(\"APP\", response.data);\n          if (success) {\n            globalDispatch({ type: \"LOGIN\", userData: data });\n          }\n        },\n        (err) => {\n          console.error(err);\n        }\n      );\n      setPageLoading(false);\n    };\n\n    if (!globalState.isAuthenticated) {\n      verifyExistingToken();\n    }\n  }, [globalDispatch, globalState.isAuthenticated]);\n\n  return pageLoading ? (\n    <div\n      style={{\n        minWidth: \"100hw\",\n        minHeight: \"100vh\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <PropagateLoader color=\"#1890ff\" size={30} />\n    </div>\n  ) : (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact>\n          <Redirect to=\"/boards\" />\n        </Route>\n        <Route path=\"/login\" exact>\n          {withGlobalHeader(<Login />)}\n        </Route>\n        <Route path=\"/signup\" exact>\n          {withGlobalHeader(<Signup />)}\n        </Route>\n        <ProtectedRoute exact path=\"/boards\" component={Boards} />\n        <ProtectedRoute\n          exact\n          path=\"/:board_id/dashboard\"\n          component={Dashboard}\n        />\n        <Route path=\"*\">{withGlobalHeader(<NotFoundPage />)}</Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","/*\n\nStructure of global state :\n\n{\n  isAuthenticated : bool,\n\n  userData = {\n    id : string,\n    name: string,\n    email : string,\n    boards : [string]\n  }\n}\n\n*/\n\nconst initialState = {\n  isAuthenticated: false,\n  userData: {},\n};\n\nexport default initialState;\n","import { useReducer } from \"react\";\nimport * as methods from \"../store/methods\";\nimport initialState from \"../store/initialState\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN\":\n      return methods.login(state, action);\n\n    case \"LOGOUT\":\n      return methods.logout(state, action);\n\n    case \"BOARD_ADD\":\n      return methods.boardAdd(state, action);\n\n    case \"BOARD_DELETE\":\n      return methods.boardDelete(state, action);\n\n    default: {\n      return state;\n    }\n  }\n};\n\nconst useGlobalState = () => {\n  const [globalState, globalDispatch] = useReducer(reducer, initialState);\n  return { globalState, globalDispatch };\n};\n\nexport default useGlobalState;\n","export function login(state, action) {\n  const { userData } = action;\n  return {\n    ...state,\n    isAuthenticated: true,\n    userData: userData,\n  };\n}\n\nexport function logout(state, action) {\n  return {\n    ...state,\n    isAuthenticated: false,\n  };\n}\n\nexport function boardAdd(state, action) {\n  const { board_id } = action;\n  state.userData.boards.push(board_id);\n  return state;\n}\n\nexport function boardDelete(state, action) {\n  const { board_id } = action;\n  let remaining_board_ids = state.userData.boards.filter(\n    (id) => id !== board_id\n  );\n  state.userData.boards = remaining_board_ids;\n  return state;\n}\n","import React from \"react\";\nimport useGlobalState from \"../hooks/useGlobalState\";\nimport Context from \"./context\";\n\nfunction GlobalStateProvider(props) {\n  const { children } = props;\n  return (\n    <Context.Provider value={useGlobalState()}>{children}</Context.Provider>\n  );\n}\n\nexport default GlobalStateProvider;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport GlobalStateProvider from \"./store/GlobalStateProvider\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStateProvider>\n      <App />\n    </GlobalStateProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}